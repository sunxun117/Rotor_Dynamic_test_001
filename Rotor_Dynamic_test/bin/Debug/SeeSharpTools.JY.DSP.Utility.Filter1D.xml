<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SeeSharpTools.JY.DSP.Utility.Filter1D</name>
    </assembly>
    <members>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration">
            <summary>
            滤波器探查
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.FilterOrder(System.Double[],System.Double[])">
            <summary>
            根据分子系数和分母系数估算滤波器阶数
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsMinPhase(System.Double[],System.Double[])">
            <summary>
            判断滤波器是否有最小相位
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsMaxPhase(System.Double[],System.Double[])">
            <summary>
            判断滤波器是否有最大相位
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsStable(System.Double[],System.Double[])">
            <summary>
            判断滤波器是否稳定
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsMinPhase(System.Double[])">
            <summary>
            判断多项式系数的根是否都在单位圆内
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsFIR(System.Double[])">
             <summary>
            判断是否为FIR滤波器
             </summary>
             <param name="a">分子系数</param>
             <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsLinearPhase(System.Double[],System.Double[],System.Double)">
            <summary>
            判断滤波器是否是线性相位
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="tol">容限</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.IsStable(System.Double[])">
            <summary>
            判断滤波器是否稳定
            </summary>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterExploration.LevDown(System.Double[],System.Double)">
            <summary>
            One step backward LevinsonDurbin recursion
            </summary>
            <param name="anxt"></param>
            <param name="enxt"></param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Eqtflength(System.Double[],System.Double[])">
            <summary>
            Equalize the length of a discrete-time transfer function
            </summary>
            <param name="num">Numerator coefficients</param>
            <param name="den">Denominator coefficients</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Symmetrytest(System.Double[],System.Boolean,System.Double)">
            <summary>
            find whether the filter is symmetric
            </summary>
            <param name="b"></param>
            <param name="removezerosFlag"></param>
            <param name="tol"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Normalize(System.Double[],System.Double[])">
            <summary>
            将转移函数的分子和分母系数进行归一化
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Getinterpfrequencies(System.Int32,System.Boolean)">
            <summary>
            计算相位响应和零相位相应的插值因子
            </summary>
            <param name="n">频率点数</param>
            <param name="whole">是否为全频段响应</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Convolve(System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.Shape,SeeSharpTools.JY.DSP.Utility.Filter1D.Algorithm)">
            <summary>
            计算两个一维实数序列的线性卷积，数据量较大时FFT方法计算较快
            </summary>
            <param name="x">第一个输入序列</param>
            <param name="y">第二个输入序列</param>
            <param name="shape">卷积分段设置，默认为Full</param>
            <param name="algorithm">算法，分为直接卷积和FFT</param>
            <returns>卷积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterHelper.Convolve(System.Numerics.Complex[],System.Numerics.Complex[],SeeSharpTools.JY.DSP.Utility.Filter1D.Shape)">
            <summary>
             计算两个一维复数序列的线性卷积，基于FFT方法
            </summary>
            <param name="x">第一个输入序列</param>
            <param name="y">第二个输入序列</param>
            <param name="shape">卷积分段设置，默认为Full</param>
            <returns>卷积结果</returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.Algorithm">
            <summary>
            使用的卷积方法
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.Algorithm.Direct">
            <summary>
            使用线性卷积的direct方法计算卷积
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.Algorithm.FrequencyDomain">
            <summary>
            用基于FFT的方法计算卷积
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.Shape">
            <summary>
            卷积的分段
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.Shape.Full">
            <summary>
            全卷积
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.Shape.Same">
            <summary>
            卷积中大小和第一个输入相同的中心部分
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.Shape.Valid">
            <summary>
            没有补零边缘的卷积部分，长度为max(length(x)-length(colCov)+1,0)
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis">
            <summary>
            FIR滤波器分析
            </summary>
            <summary>
            FIR滤波器分析
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.FrequencyResponse(System.Double[],System.Double[],System.Double)">
            <summary>
            计算FIR数字滤波器在指定频点的频率响应
            </summary>
            <param name="b">分子系数</param>
            <param name="f">指定的频率点数组</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.FrequencyResponse(System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算FIR数字滤波器的频率响应
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.GroupDelay(System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算FIR滤波器的群延迟，n阶线性相位FIR滤波器的群延迟为n/2
            </summary>
            <param name="b">滤波器系数</param>
            <param name="n">频率点数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns>gd是群延迟数组，单位是Samples，
            w是对应的频率点数组，单位和fs相同，默认为radians/sample</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.Bode(System.Double[],System.Double,System.Int32)">
            <summary>
            计算连续时间系统的幅频特性（单位dB）和相频特性（单位度）
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.PhaseResponse(System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算数字滤波器的相位响应，单位是弧度
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.ZeroPhaseResponse(System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算滤波器的零相位响应
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.ImpulseResponse(System.Double[],System.Double,System.Double)">
            <summary>
            计算数字滤波器的冲击响应
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率，默认值为2 Hz</param>
            <param name="n">采样点数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRAnalysis.StepResponse(System.Double[],System.Double)">
            <summary>
            计算数字滤波器的阶跃响应
            </summary>
            <param name="b">分子系数</param>
            <param name="sampleRate">采样率，默认值为2 Hz</param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign">
            <summary>
            FIR滤波器设计
            </summary>
            <summary>
            FIR滤波器设计
            </summary>
            <summary>
            FIR滤波器设计
            </summary>
            <summary>
            FIR滤波器设计
            </summary>
            <summary>
            FIR滤波器设计
            </summary>
            <summary>
            FIR滤波器设计
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.LeastSquare(System.Int32,System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            使用最小二乘法设计线性相位多频带FIR滤波器，使其频率响应最接近于指定的频带和增益描述
            </summary>
            <param name="n">滤波器阶数，等于系数+1，必须是偶数</param>
            <param name="bands">单调递增的频带边沿频率，范围是[0, sampleRate/2]，长度必须是偶数</param>
            <param name="amplitudes">每个频点的理想幅度，长度和bands相等</param>
            <param name="weight">每个频带的相对权重，数组长度是bands的一半</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2Hz</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.ConstrainedLeastSquare(System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            使用约束最小二乘法设计线性相位多频带FIR滤波器，使其频率响应最接近于指定的频带和增益描述
            </summary>
            <param name="n">滤波器阶数，等于系数长度-1，必须是偶数，如果是奇数会自动加1</param>
            <param name="bands">单调递增的频带边沿频率，范围是[0, sampleRate/2]，长度必须是偶数</param>
            <param name="amplitudes">每个频点的理想增益，长度等于频带数量，也就是bands的长度-1</param>
            <param name="upperBounds">每个频带的最大纹波，线性单位，长度和amplitudes相等</param>
            <param name="lowerBounds">每个频带的最小纹波，线性单位，长度和amplitudes相等</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2Hz</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Frefine(MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double},MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            refine local minima and maxima of H using Newton's method
            </summary>
            <param name="a"></param>
            <param name="v"></param>
            <param name="rs"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.CheckFIR_LeastSquare(System.Int32,System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            检查FIR最小二乘法设计法的输入参数
            </summary>
            <param name="numtaps"></param>
            <param name="bands"></param>
            <param name="amplitudes"></param>
            <param name="weight"></param>
            <param name="fs"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.CheckFIR_ConstrainedLeastSquare(System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            检查FIR约束最小二乘法设计法的输入参数
            </summary>
            <param name="n"></param>
            <param name="bands"></param>
            <param name="amplitudes"></param>
            <param name="upperBounds"></param>
            <param name="lowerBounds"></param>
            <param name="sampleRate"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.KaiseOrd(System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            FIR滤波器Kaiser窗阶估计，返回满足设计参数要求的滤波器阶数、归一化截止频率和beta参数
            </summary>
            <param name="bands">单调递增的频带边沿频率，必须在0~sampleRate/2之间，长度必须是偶数</param>
            <param name="amplitudes">每个频点的理想幅度，长度等于(bands.len + 2) / 2，过渡带不指定</param>
            <param name="ripples">每个频带的最大纹波，范围是(0,1)，长度和amplitudes相等</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2Hz</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.KaiserLowpassOrd(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            低通FIR滤波器Kaiser窗阶估计，返回满足设计参数要求的滤波器阶数和beta参数
            </summary>
            <param name="wp">归一化通带边沿频率</param>
            <param name="ws">归一化阻带边沿频率</param>
            <param name="rp">最大通带纹波，范围是(0,1)</param>
            <param name="rs">最大阻带纹波，范围是(0,1)</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.FIRPMOrd(System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            使用Parks-McClellan算法估计满足设计参数要求的等波纹FIR滤波器的最低阶数
            </summary>
            <param name="bands">单调递增的频带边沿频率，必须在0~sampleRate/2之间，长度必须是偶数</param>
            <param name="amplitudes">每个频点的理想幅度，长度等于(bands.len + 2) / 2，过渡带不指定</param>
            <param name="ripples">每个频带的最大纹波，范围是(0,1)，长度和amplitudes相等</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2Hz</param>
            <returns>N：滤波器阶数；wn：归一化截止频率，范围是[0,1]，其中1对应奈奎斯特频率频率fs/2；
            amplitudes：每个频点的幅度响应；weights：每个频带的权重，长度是bands的一半</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Remlpord(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            使用Parks-McClellan算法估计低通滤波器的阶数
            </summary>
            <param name="wp">归一化通带边沿频率</param>
            <param name="ws">归一化阻带边沿频率</param>
            <param name="rp">最大通带纹波，范围是(0,1)</param>
            <param name="rs">最大阻带纹波，范围是(0,1)</param>
            <returns>滤波器系数长度</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.ParksMcClellan(System.Int32,System.Double[],System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType,System.Double,System.Int32)">
            <summary>
            使用Parks-McClellan算法和Remes交换技术设计具有等波纹特性的线性相位FIR滤波器，
            设计结果在指定频率响应和实际频率响应之间具有最佳拟合，从而可最小化指定频率响应和实际频率响应之间的最大误差，
            部分情况下算法可能无法收敛，需要通过频率响应进行验证，如果设计不正确，需要提高阶数或者降低设计参数要求
            </summary>
            <param name="order">滤波器阶数</param>
            <param name="bands">单调递增的频带边沿频率，范围是[0, fs/2]，长度必须是偶数</param>
            <param name="amplitudes">每个频点的理想增益，长度和bands相等</param>
            <param name="weight">权重向量，侧重地将某些频带的误差降至最低，数组长度是bands的一半</param>
            <param name="type">滤波器类型，默认为多频带Bandpass</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2Hz</param>
            <param name="griddensity">频率网格密度，密度越高越接近理想的等波纹滤波器，但是会增加计算时间，默认值为16</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.CheckFIR_PM(System.Int32,System.Double[],System.Double[],System.Double[])">
            <summary>
            检查Parks-McClellan设计参数
            </summary>
            <param name="order"></param>
            <param name="bands"></param>
            <param name="amplitudes"></param>
            <param name="weight"></param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.firpminit(System.Int32,System.Double[],System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType,System.Int32)">
             <summary>
            
             </summary>
             <param name="order"></param>
             <param name="bands"></param>
             <param name="amplitudes"></param>
             <param name="weight"></param>
             <param name="filterType"></param>
             <param name="griddensity"></param>
             <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.firpmgrid(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
            <summary>
            计算网格频率
            </summary>
            <param name="numtaps"></param>
            <param name="griddensity"></param>
            <param name="bands"></param>
            <param name="neg"></param>
            <param name="nodd"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.firpmfrf(System.Double[],System.Double[],System.Double[],System.Double[],System.Boolean)">
            <summary>
            根据频率点计算频率响应
            </summary>
            <param name="bands"></param>
            <param name="grid"></param>
            <param name="amplitudes"></param>
            <param name="weight"></param>
            <param name="differentiator"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Remezm(System.Int32,System.Double[],System.Double[],System.Double[],System.Double[],System.Int32)">
            <summary>
            remezm交换算法
            </summary>
            <param name="nfilt">filter length</param>
            <param name="edge">vector of band edges (between 0 and .5)</param>
            <param name="grid">frequency grid (between 0 and .5)</param>
            <param name="des">desired function on frequency grid</param>
            <param name="wt">weight function on frequency grid</param>
            <param name="neg">whether symmetric imp resp</param>
            <returns>coefficients, computed error and indices of extremal frequencies</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.remezdd(System.Int32,System.Int32,System.Int32,System.Double[])">
            <summary>
            使用拉格朗日多项式插值法计算系数
            </summary>
            <param name="k"></param>
            <param name="n"></param>
            <param name="m"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Gee(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Double[],System.Int32,System.Double,System.Double)">
             <summary>
            
             </summary>
             <param name="ad"></param>
             <param name="grid"></param>
             <param name="x"></param>
             <param name="y"></param>
             <param name="des"></param>
             <param name="wt"></param>
             <param name="l"></param>
             <param name="nut"></param>
             <param name="comp"></param>
             <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.firgrgrid(System.Int32,System.Int32,System.Double[],System.Int32,System.Double[])">
            <summary>
            Set up the grid of frequency points for the approximation on a compact subset of the interval [0, pi],
            called by firgr
            </summary>
            <param name="nfilt"></param>
            <param name="lgrid"></param>
            <param name="ff"></param>
            <param name="ftype"></param>
            <param name="free_edges"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.GaussDesign(System.Double,System.Int32,System.Int32)">
            <summary>
            设计高斯 FIR 脉冲成型滤波器，滤波器的阶数 sps * span 必须是偶数
            </summary>
            <param name="bt">-3dB单边带带宽和和符号时间（单位为秒）的乘积，较小的 bt 值会产生较大的脉冲宽度</param>
            <param name="span">符号数，默认值为3</param>
            <param name="sps">每个符号周期包含的样本数数，默认值为2</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.RaisedCosine(System.Double,System.Int32,System.Int32,SeeSharpTools.JY.DSP.Utility.Filter1D.RCosShape)">
            <summary>
            设计升余弦或根升余弦 FIR 脉冲成型滤波器，具有平滑正弦过渡的低通响应。滤波器的阶数 sps * span 必须是偶数，
            输入信号延迟 span / 2个符号，也就是 span * sps / 2个采样点
            </summary>
            <param name="beta">滚降系数</param>
            <param name="span">符号数</param>
            <param name="sps">每个符号周期包含的样本数</param>
            <param name="shape">升余弦窗的形状，默认为平方根</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Sgolay(System.Int32,System.Int32,System.Double[])">
            <summary>
            Savitzky-Golay滤波器设计，用于在宽频带范围内平滑含噪声的信号，可以较大程度保留原始信号的高频分量
            </summary>
            <param name="order">多项式阶数，必须小于帧长度，如果阶数等于帧长度-1，则不执行平滑操作</param>
            <param name="frameLength">帧长度，必须为奇数</param>
            <param name="weights">权重数组，大小等于帧长度</param>
            <returns>滤波器系数矩阵</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.Window(System.Int32,System.Double[],SeeSharpTools.JY.DSP.Utility.WindowType,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType,System.Boolean,System.Double)">
            <summary>
            使用加窗法设计标准频带的线性FIR滤波器，系数为奇数是 I 类滤波器，系数为偶数是 II 类滤波器，
            注意：由于 II 类滤波器在奈奎斯特频率下的频率响应为零，此方法不用于设计 II 类高通和带阻滤波器，
            此时如果系数为偶数则会自动加1，并返回 I 类FIR滤波器设计
            </summary>
            <param name="n">滤波器阶数，等于系数长度-1</param>
            <param name="wn">截止频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            wn与fs单位相同，范围在0~1之间，1对应于奈奎斯特频率fs/2</param>
            <param name="type">窗函数类型，用于减少滤波器通带中的波纹，并改进滤波器对滤波器阻带中频率分量的衰减，默认使用汉明窗</param>
            <param name="windowParam">窗参数，包括Kaiser窗的beta参数、高斯窗的标准差，或Chebyshev窗的衰减系数，默认值为NaN</param>
            <param name="bandType">滤波器类型，默认为第一个频带为通带的多频带滤波器</param>
            <param name="scale">是否缩放FIR加窗滤波器系数，使得通带幅度为1 (0 dB)</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.FrequencySampling(System.Int32,System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.WindowType,System.Double,System.Double)">
            <summary>
            使用频率采样法设计多频带的线性FIR滤波器，可以具有任意形状的分段线性频率响应，
            系数为奇数是 I 类滤波器，系数为偶数是 II 类滤波器，
            注意：由于 II 类滤波器在奈奎斯特频率下的频率响应为零，此方法不用于设计 II 类高通和带阻滤波器，
            此时如果系数为偶数则会自动加1，并返回 I 类FIR滤波器设计
            </summary>
            <param name="n">滤波器阶数，等于系数长度-1</param>
            <param name="bands">单调递增的频带边沿频率，范围是[0, sampleRate/2]</param>
            <param name="amplitudes">每个频点的理想增益，长度和bands相等</param>
            <param name="windowType">窗函数类型，用于减少滤波器通带中的波纹，并改进滤波器对滤波器阻带中频率分量的衰减，默认使用汉明窗</param>
            <param name="windowParam">窗参数，包括Kaiser窗的beta参数、高斯窗的标准差，或Chebyshev窗的衰减系数，默认值为NaN</param>
            <param name="sampleRate">采样率，单位为Hz，默认为2</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.CheckFIR_Window(System.Int32,System.Double[],System.Double)">
            <summary>
            检查FIR窗函数设计法的输入参数
            </summary>
            <param name="numtaps"></param>
            <param name="wn"></param>
            <param name="fs"></param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRDesign.CheckFIR_Window(System.Int32,System.Double[],System.Double[],System.Double)">
            <summary>
            检查FIR窗函数设计法的输入参数
            </summary>
            <param name="numtaps"></param>
            <param name="bands"></param>
            <param name="amplitudes"></param>
            <param name="fs"></param>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType">
            <summary>
            FIR滤波器频带类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.Lowpass">
            <summary>
            低通滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.Highpass">
            <summary>
            高通滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.Bandstop">
            <summary>
            带阻滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.Bandpass">
            <summary>
            带通滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.DC_pass">
            <summary>
            第一个频带为通带，低通或者带阻
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRBandType.DC_stop">
            <summary>
            第一个频带为阻带，高通或者带通
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType">
            <summary>
            滤波器类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType.Bandpass">
            <summary>
            多频带滤波器，适用于 I 类和 II 类FIR滤波器，如如抽头数为偶数（II 类滤波器），则奈奎斯特频点的幅度必须为0
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType.Differentiator">
            <summary>
            微分滤波器，适用于 III 类FIR滤波器，信号在时域中的微分等效于信号的傅里叶变换乘以虚斜坡函数
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PMFilterType.Hilbert">
            <summary>
            反对称滤波器/Hilbert 变换器，适用于奇对称滤波器，即偶数阶 III 类滤波器或者奇数阶 IV 类滤波器
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.RCosShape">
            <summary>
            升余弦窗的形状
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.RCosShape.Sqrt">
            <summary>
            根升余弦
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.RCosShape.Normal">
            <summary>
            升余弦
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering">
            <summary>
            FIR滤波
            </summary>
            <summary>
            FIR滤波
            </summary>
            <summary>
            FIR滤波
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FFTFilter(System.Double[],System.Double[])">
            <summary>
            使用基于FFT的重叠相加法 (OverlapAdd) 对一维输入信号进行滤波，当输入信号较长时，此方法要比FIRFilter快
            </summary>
            <param name="b">滤波器系数</param>
            <param name="x">输入信号</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FFTFilter(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            使用基于FFT的重叠相加法对二维输入信号进行滤波，当输入信号较长时，此方法要比FIRFilter快
            </summary>
            <param name="b">滤波器系数，列数和输入信号的列数相等，每一列的系数对输入信号按列滤波</param>
            <param name="x">二维输入信号，通道按列排列，列数和滤波器系数数组的列数相等</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FIRFilter(System.Double[],System.Double[])">
            <summary>
            使用FIR系数指定的直接型FIR滤波器，对输入信号进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="x">单通道输入信号</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FIRFilter(System.Double[],System.Double[0:,0:])">
            <summary>
            使用FIR系数指定的直接型FIR滤波器，对多通道输入信号进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="x">多通道输入信号，通道按列排列</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FIRFilter(System.Double[],System.Double[],System.Double[])">
            <summary>
            使用FIR滤波器对输入序列进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="x">输入序列</param>
            <param name="z">滤波器延迟的初始条件，数组大小等于b的长度</param>
            <returns>滤波后序列</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.FIRFilter(System.Double[],System.Double[],System.Double[]@)">
            <summary>
            使用FIR滤波器对输入序列进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="x">输入序列</param>
            <param name="z">滤波器延迟的初始条件，数组大小等于b的长度</param>
            <returns>滤波后序列</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.SgolayFilter(System.Double[],System.Int32,System.Int32,System.Double[])">
            <summary>
            使用Savitzky-Golay FIR平滑滤波器对输入信号进行低通滤波
            </summary>
            <param name="x">单通道输入信号</param>
            <param name="order">多项式阶数，必须小于帧长度，如果阶数等于帧长度-1，则不执行平滑操作</param>
            <param name="frameLength">帧长度，必须为奇数</param>
            <param name="weights">权重数组，大小等于帧长度</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.FIRFiltering.SgolayFilter(System.Double[0:,0:],System.Int32,System.Int32,System.Double[])">
            <summary>
            使用Savitzky-Golay FIR平滑滤波器对输入信号进行低通滤波
            </summary>
            <param name="x">多通道输入信号，通道按列排列</param>
            <param name="order">多项式阶数，必须小于帧长度，如果阶数等于帧长度-1，则不执行平滑操作</param>
            <param name="frameLength">帧长度，必须为奇数</param>
            <param name="weights">权重数组，大小等于帧长度</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis">
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
            <summary>
            IIR滤波器分析
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.Bode(System.Double[],System.Double[],System.Double,System.Int32)">
            <summary>
            计算连续时间系统的幅频特性（单位dB）和相频特性（单位度）
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.Unwrap(System.Double[],System.Double)">
            <summary>
            相位展开，对数组中的元素间隔大于tolerance的进行拆分2π的操作
            如果不连续性小于π，但是大于tolerance，不进行任何操作
            </summary>
            <param name="phase">输入相位，以弧度为单位</param>
            <param name="tolerance">跳转阈值，默认为pi</param>
            <returns>展开的相位</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FrequencyResponse(System.Double[],System.Double[],System.Double[],System.Double)">
            <summary>
            计算IIR数字滤波器在指定频点的频率响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="f">指定的频率点数组</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FrequencyResponse(System.Double[],System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算IIR数字滤波器的频率响应，转移函数形式输入
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FrequencyResponse(System.Double[0:,0:],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算IIR数字滤波器的频率响应，二阶节形式输入
            </summary>
            <param name="sos">二阶节数组</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.Freqz(System.Double[],System.Double[],System.Int32)">
            <summary>
            使用fft计算IIR滤波器的频率响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="npoints">fft点数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FrequencyVector(System.Int32,System.Double,System.Int32)">
            <summary>
            Frequency vector for calculating filter responses
            </summary>
            <param name="nfft">The number of points</param>
            <param name="sampleRate">The sampling frequency of the filter</param>
            <param name="side">1 = 0-2pi, 2 = 0-pi, 3 = -pi-pi</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.GroupDelay(System.Double[],System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算IIR数字滤波器的群延迟，定义为连续展开相位的微分
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns>群延迟和对应频点</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.ShpakDly(System.Double[],System.Double[],System.Int32,System.Boolean)">
            <summary>
            Computes group delay using the Shpak algorithm,
            Tolerance for classifying roots as on the unit circle or at the origin
            </summary>
            <param name="b"></param>
            <param name="a"></param>
            <param name="n"></param>
            <param name="whole"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.GrpSection(System.Double[],System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Compute the group delay for a first- or second-order polynomial
            </summary>
            <param name="q"></param>
            <param name="cw"></param>
            <param name="sw"></param>
            <param name="cw2"></param>
            <param name="sw2"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.SmithDly(System.Double[],System.Double[],System.Int32,System.Boolean)">
            <summary>
            Computes group delay using the Smith algorithm
            </summary>
            <param name="b"></param>
            <param name="a"></param>
            <param name="n"></param>
            <param name="whole"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.ImpulseResponseLength(System.Double[],System.Double[])">
            <summary>
            计算离散时间滤波器的冲激响应长度
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.ImpulseResponse(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            计算数字滤波器的冲击响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2 Hz</param>
            <param name="n">采样点数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.StableNmarginalLength(System.Numerics.Complex[],System.Double,System.Int32)">
            <summary>
            Determine the length for an unstable filter
            </summary>
            <param name="p"></param>
            <param name="tol"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.Mltplcty(System.Numerics.Complex[],System.Int32)">
            <summary>
            Multiplicity of a pole, finds the multiplicity of P(IND) in the vector P
            </summary>
            <param name="p"></param>
            <param name="ind"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.PhaseResponse(System.Double[],System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算数字滤波器的相位响应，单位是弧度
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.StepResponse(System.Double[],System.Double[],System.Double)">
            <summary>
            计算数字滤波器的阶跃响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2 Hz</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.ZeroPhaseResponse(System.Double[],System.Double[],System.Double,System.Int32,System.Boolean)">
            <summary>
            计算滤波器的零相位响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="n">频率点数，默认为512</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.ZeroPhaseResponse(System.Double[],System.Double[],System.Double[],System.Double,System.Boolean)">
            <summary>
            计算滤波器在指定频点的零相位响应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="w">指定频点数组</param>
            <param name="sampleRate">采样率，默认值为2Hz</param>
            <param name="whole">false时频率点范围是0~sampleRate/2，true时频率点范围是0~sampleRate</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.DeterminFIRFilterType(System.Int32,System.Boolean)">
            <summary>
            确定FIR滤波器类型
            </summary>
            <param name="n">阶数</param>
            <param name="issymflag">系数是否对称</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.EstimateHsign(System.Double[],System.Double[],System.Double[],System.Boolean,System.Double)">
            <summary>
            计算相位响应的符号
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="phi">连续相位</param>
            <param name="whole">是否为全频段响应</param>
            <param name="upn_or_w">插值后点数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FindPhaseJumps(System.Double[])">
            <summary>
            查找相位突变位置
            </summary>
            <param name="phi">连续相位</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.FindSym(System.Double[],System.Double)">
             <summary>
            
             </summary>
             <param name="phi"></param>
             <param name="upn_or_w"></param>
             <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRAnalysis.Issymmetric(System.Double[],System.Int32)">
            <summary>
            Determination of the symmetry vs val
            </summary>
            <param name="phi"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign">
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
            <summary>
             IIR滤波器设计
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Butter(System.Int32,System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,System.Double)">
            <summary>
            巴特沃斯数字滤波器设计
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wn">
            截止频率，定义为滤波器幅值响应为 1 / sqrt(2) 时的频率，范围是[0, fs/2]，
            对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2
            </param>
            <param name="bandType">滤波器类型，默认为低通，当类型为带通或者带阻时阶数会变为低通类型的两倍</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Cheby1(System.Int32,System.Double[],System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,System.Double)">
            <summary>
            切比雪夫I型数字滤波器设计
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wp">
            通带截止频率，定义为滤波器幅值响应为 -rp dB 时的频率，范围是[0, fs/2]，
            对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2
            </param>
            <param name="rp">通带的峰峰值纹波，单位为dB，纹波越小，滤波器的过渡带越宽，默认值为0.1dB</param>
            <param name="bandType">滤波器类型，默认为低通，当类型为带通或者带阻时阶数会变为低通类型的两倍</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Cheby2(System.Int32,System.Double[],System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,System.Double)">
            <summary>
            切比雪夫II型数字滤波器设计
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="ws">
            阻带截止频率，定义为滤波器幅值响应为 -rs dB 时的频率，范围是[0, fs/2]，
            对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2
            </param>
            <param name="rs">从通带最大值处向下的阻带衰减，衰减越大，滤波器的过渡带越宽，单位为dB，默认为60dB</param>
            <param name="bandType">滤波器类型，默认为低通，当类型为带通或者带阻时阶数会变为低通类型的两倍</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Ellip(System.Int32,System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,System.Double)">
            <summary>
            椭圆数字滤波器设计
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wp">
            通带截止频率，定义为滤波器幅值响应为 -rp dB 时的频率，范围是[0, fs/2]，
            对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2
            </param>
            <param name="rp">通带的峰峰值纹波，单位为dB，纹波越小，滤波器的过渡带越宽，默认值为0.1dB</param>
            <param name="rs">从通带最大值处向下的阻带衰减，衰减越大，滤波器的过渡带越宽，单位为dB，默认为60dB</param>
            <param name="bandType">滤波器类型，默认为低通，当类型为带通或者带阻时阶数会变为低通类型的两倍</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Bilinear(System.Double[],System.Double[],System.Double)">
            <summary>
            通过双线性变换将模拟滤波器原型转换为IIR数字滤波器
            </summary>
            <param name="b">模拟滤波器转移函数的分子系数</param>
            <param name="a">模拟滤波器转移函数的分母系数</param>
            <param name="sampleRate">采样率，单位为Hz</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Bilinear(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double)">
            <summary>
            通过双线性变换将模拟滤波器原型转换为IIR数字滤波器
            </summary>
            <param name="z">转移函数的零点</param>
            <param name="p">转移函数的极点</param>
            <param name="k">转移函数的增益</param>
            <param name="sampleRate">采样率，单位为Hz</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.zpk2tf(System.Numerics.Complex[],System.Numerics.Complex[],System.Double)">
            <summary>
            将零极点增益转换为多项式转移函数
            </summary>
            <param name="z">转移函数的零点</param>
            <param name="p">转移函数的极点</param>
            <param name="k">转移函数的增益</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.tf2zpk(System.Double[],System.Double[])">
            <summary>
            将多项式转移函数转换为零极点增益
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.zp2sos(System.Numerics.Complex[],System.Numerics.Complex[])">
            <summary>
            将零极点转换为二阶节 (SOSDesign)
            </summary>
            <param name="z">转移函数的零点</param>
            <param name="p">转移函数的极点</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.zpk2sos(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Boolean)">
            <summary>
            将零极点增益转换为二阶节 (SOSDesign)，增益
            </summary>
            <param name="z">转移函数的零点</param>
            <param name="p">转移函数的极点</param>
            <param name="k">转移函数的增益</param>
            <param name="analog">模拟滤波器还是数字滤波器</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.sos2zpk(System.Double[0:,0:])">
            <summary>
            将二阶节 (SOSDesign)转换为零极点增益
            </summary>
            <param name="sos">二阶节形式数组系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.tf2sos(System.Double[],System.Double[])">
            <summary>
            将多项式转移函数转换为二阶节 (SOSDesign)和增益形式
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.sos2tf(System.Double[0:,0:])">
            <summary>
             将二阶节 (SOSDesign)转换为多项式转移函数
            </summary>
            <param name="sos">二阶节形式数组系数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.NearestRealComplexIndex(System.Numerics.Complex[],System.Numerics.Complex,System.String)">
            <summary>
            Get the next closest real or complex element based on distance
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Single_zpksos(System.Numerics.Complex[],System.Numerics.Complex[],System.Double)">
            <summary>
            Create one second-order section from up to two zeros and poles
            </summary>
            <param name="z"></param>
            <param name="p"></param>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.IndexWorst(System.Numerics.Complex[],System.Boolean)">
             <summary>
            
             </summary>
             <param name="p"></param>
             <param name="analog"></param>
             <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Lp(System.Double[],System.Double[],System.Double)">
            <summary>
            将低通滤波器原型转换为不同截止频率的低通滤波器，转移函数表示方法
            </summary>
            <param name="b">多项式分子系数</param>
            <param name="a">多项式分母系数</param>
            <param name="wo">预期的截止频率，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Lp(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为不同截止频率的低通滤波器，零极点增益表示方法
            </summary>
            <param name="z">模拟滤波器转移函数的零点</param>
            <param name="p">模拟滤波器转移函数的极点</param>
            <param name="k">模拟滤波器转移函数的增益</param>
            <param name="wo">预期的截止频率，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Hp(System.Double[],System.Double[],System.Double)">
            <summary>
            将模拟低通滤波器原型转换为高通滤波器，转移函数表示方法
            </summary>
            <param name="b">多项式分子系数</param>
            <param name="a">多项式分母系数</param>
            <param name="wo">预期的截止频率，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Hp(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为高通滤波器，零极点增益表示方法
            </summary>
            <param name="z">模拟滤波器转移函数的零点</param>
            <param name="p">模拟滤波器转移函数的极点</param>
            <param name="k">模拟滤波器转移函数的增益</param>
            <param name="wo">预期的截止频率，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Bp(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为带通滤波器，转移函数表示方法
            </summary>
            <param name="b">多项式分子系数</param>
            <param name="a">多项式分母系数</param>
            <param name="wo">预期的通带中心频率，单位为弧度/second</param>
            <param name="bw">预期的通带宽度，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Bp(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为带通滤波器，零极点增益表示方法
            </summary>
            <param name="z">模拟滤波器转移函数的零点</param>
            <param name="p">模拟滤波器转移函数的极点</param>
            <param name="k">模拟滤波器转移函数的增益</param>
            <param name="wo">预期的通带中心频率，单位为弧度/second</param>
            <param name="bw">预期的通带宽度，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Bs(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为带阻滤波器，转移函数表示方法
            </summary>
            <param name="b">多项式分子系数</param>
            <param name="a">多项式分母系数</param>
            <param name="wo">预期的阻带中心频率，单位为弧度/second</param>
            <param name="bw">预期的阻带宽度，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Lp2Bs(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double,System.Double)">
            <summary>
            将模拟低通滤波器原型转换为带阻滤波器，零极点增益表示方法
            </summary>
            <param name="z">模拟滤波器转移函数的零点</param>
            <param name="p">模拟滤波器转移函数的极点</param>
            <param name="k">模拟滤波器转移函数的增益</param>
            <param name="wo">预期的阻带中心频率，单位为弧度/second</param>
            <param name="bw">预期的阻带宽度，单位为弧度/second</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.TransformLp(System.Numerics.Complex[],System.Numerics.Complex[],System.Double,System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType)">
            <summary>
            将模拟低通滤波器原型转换为其它类型滤波器，零极点增益表示方法
            </summary>
            <param name="z">模拟滤波器转移函数的零点</param>
            <param name="p">模拟滤波器转移函数的极点</param>
            <param name="k">模拟滤波器转移函数的增益</param>
            <param name="wn">归一化截止频率，范围在0~1之间</param>
            <param name="bandType">滤波器类型</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Buttap(System.Int32)">
            <summary>
            计算N阶巴特沃斯模拟低通滤波器原型的零点、极点和增益
            </summary>
            <param name="n">滤波器阶数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Cheb1ap(System.Int32,System.Double)">
            <summary>
            计算N阶切比雪夫I型模拟低通滤波器原型的零点、极点和增益
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Cheb2ap(System.Int32,System.Double)">
            <summary>
            计算N阶切比雪夫II型模拟低通滤波器原型的零点、极点和增益
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Ellipap(System.Int32,System.Double,System.Double)">
            <summary>
            计算N阶椭圆模拟低通滤波器原型的零点、极点和增益
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.Besselap(System.Int32)">
            <summary>
            计算N阶贝塞尔模拟低通滤波器原型的零点、极点和增益
            </summary>
            <param name="n">滤波器阶数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.OrderEstimation(System.Double[],System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            预估IIR滤波器的阶数和对应的截止频率
            </summary>
            <param name="wp">通带边沿频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wp与fs单位相同，范围在0~1之间，1对应于奈奎斯特频率fs/2。
            对于模拟滤波器，wp是角频率，单位为rad/s</param>
            <param name="ws">阻带边沿频率，限制与wp说明相同</param>
            <param name="gpass">最大通带纹波，单位为dB</param>
            <param name="gstop">最大阻带纹波，单位为dB</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，单位为Hz</param>
            <returns>z，满足设计参数的滤波器最低阶数</returns>
            <returns>wn，3dB截止频率，低通和高通返回单个截止频率，带通和带阻返回一组截止频率</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.FilterParamCheck(System.Double[],System.Double[],System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            滤波器设计参数检查
            </summary>
            <param name="wp"></param>
            <param name="ws"></param>
            <param name="gpass"></param>
            <param name="gstop"></param>
            <param name="analog"></param>
            <param name="sampleRate"></param>
            <returns>归一化边沿频率</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.IIRNotch(System.Double,System.Double,System.Double)">
            <summary>
            设计二阶IIR陷波滤波器，Q因子等于w0/bw
            </summary>
            <param name="w0">陷波频率，单位为Hz</param>
            <param name="bw">-3dB带宽，单位为Hz</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.IIRPeak(System.Double,System.Double,System.Double)">
            <summary>
            设计二阶IIR尖峰（谐振）滤波器
            </summary>
            <param name="w0">尖峰频率，单位为Hz</param>
            <param name="bw">-3dB带宽，单位为Hz</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>滤波器系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.ZeroPoleGain(System.Double[],System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据给定的截止频率和纹波，设计满足要求的最低阶数的IIR数字滤波器不适用于贝塞尔滤波器）
            </summary>
            <param name="wp">通带边沿频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wp与fs单位相同，范围在0~1之间，1对应于奈奎斯特频率fs/2。
            对于模拟滤波器，wp是角频率，单位为rad/s</param>
            <param name="ws">阻带边沿频率，限制与wp说明相同</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>零极点增益形式</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.TransferFunction(System.Double[],System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据给定的截止频率和纹波，设计满足要求的最低阶数的IIR数字滤波器（不适用于贝塞尔滤波器）
            </summary>
            <param name="wp">通带边沿频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wp与fs单位相同，范围在0~1之间，1对应于奈奎斯特频率fs/2。
            对于模拟滤波器，wp是角频率，单位为rad/s</param>
            <param name="ws">阻带边沿频率，限制与wp说明相同</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.SOSDesign(System.Double[],System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据给定的截止频率和纹波，设计满足要求的最低阶数的IIR数字滤波器（不适用于贝塞尔滤波器）
            </summary>
            <param name="wp">通带边沿频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wp与fs单位相同，范围在0~1之间，1对应于奈奎斯特频率fs/2
            对于模拟滤波器，wp是角频率，单位为rad/s</param>
            <param name="ws">阻带边沿频率，限制与wp说明相同</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>SOS形式</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.ZeroPoleGain(System.Int32,System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据指定的阶数和临界参数设计IIR数字滤波器
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wn">截止频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wn与fs单位相同，范围在0~sampleRate/2之间。
            对于模拟滤波器，wn是角频率，单位为rad/s</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="bandType">滤波器类型，默认为低通</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>零极点增益形式</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.TransferFunction(System.Int32,System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据指定的阶数和临界参数设计IIR数字滤波器
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wn">截止频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wn与fs单位相同，范围在0~sampleRate/2之间。
            对于模拟滤波器，wn是角频率，单位为rad/s</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="bandType">滤波器类型，默认为低通</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>转移函数的系数形式</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesign.SOSDesign(System.Int32,System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType,SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod,System.Double)">
            <summary>
            根据指定的阶数和临界参数设计IIR数字滤波器
            </summary>
            <param name="n">滤波器阶数</param>
            <param name="wn">截止频率，对于低通和高通滤波器，数组大小为1，对于带通和带阻滤波器，数组大小为2。
            对于数字滤波器，wn与fs单位相同，范围在0~sampleRate/2之间。
            对于模拟滤波器，wn是角频率，单位为rad/s</param>
            <param name="rp">最大通带纹波，单位为dB</param>
            <param name="rs">最大阻带纹波，单位为dB</param>
            <param name="bandType">滤波器类型，默认为低通</param>
            <param name="designMethod">滤波器设计方法，默认为巴特沃斯</param>
            <param name="sampleRate">采样率，默认为2 Hz</param>
            <returns>SOS形式</returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType">
            <summary>
            IIR滤波器频带类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType.Lowpass">
            <summary>
            低通滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType.Highpass">
            <summary>
            高通滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType.Bandstop">
            <summary>
            带阻滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRBandType.Bandpass">
            <summary>
            带通滤波器
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod">
            <summary>
            IIR滤波器设计方法
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod.Butterworth">
            <summary>
            巴特沃斯滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod.ChebyshevI">
            <summary>
            切比雪夫I型滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod.ChebyshevII">
            <summary>
            切比雪夫II型滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod.Elliptic">
            <summary>
            椭圆滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRDesignMethod.Bessel">
            <summary>
            贝塞尔滤波器
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering">
            <summary>
            IIR滤波
            </summary>
            <summary>
            IIR滤波
            </summary>
            <summary>
            IIR滤波
            </summary>
            <summary>
            IIR滤波
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.IIRFilter(System.Double[],System.Double[],System.Double[])">
            <summary>
            使用基于差分方程法的直接II型IIR滤波器对输入信号进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="x">一维输入信号</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.IIRFilter(System.Double[],System.Double[],System.Double[0:,0:])">
            <summary>
            使用基于差分方程法的直接II型IIR滤波器对输入信号进行滤波
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="x">多通道输入信号，通道按列排列</param>
            <returns>滤波后信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.IIRFilter(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            使用直接II型IIR滤波器对输入序列进行滤波，反向系数为空时等效于FIR滤波器
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="x">输入序列</param>
            <param name="z">滤波器延迟的初始条件，数组大小等于b和a长度的最大值-1</param>
            <returns>滤波后序列和滤波器延迟的最终条件</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.IIRFilter_IC(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            针对给定的过去的输入和输出构建转置的直接II型滤波器的初始条件
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="ypast">过去的输出，长度是分母系数长度-1</param>
            <param name="xpast">过去的输入，长度是分子系数长度-1，如果为null代表过去输入为0</param>
            <returns>滤波器延迟的初始条件</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.IIRFilter_IC(System.Double[],System.Double[])">
            <summary>
            构建IIR滤波器的阶跃稳态响应的初始状态，以便滤波器的输出从与要滤波的信号的第一个元素相同的值开始
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <returns>滤波器初始状态</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.SmoothingFilter(System.Double[],System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.SmoothingType,System.Int32,SeeSharpTools.JY.DSP.Utility.Filter1D.FilterShape,System.Double)">
            <summary>
            对输入序列进行平滑滤波，包括移动平均FIR滤波器或指数平均IIR滤波器
            </summary>
            <param name="x">输入序列</param>
            <param name="sampleRate">采样率</param>
            <param name="type">平滑滤波器类型</param>
            <param name="halfWidth">移动平均滤波器的半宽，以采样为单位，全宽=2*halfWidth+1</param>
            <param name="shape">移动平均滤波器的形状</param>
            <param name="timeConstant">指定指数加权滤波器的时间常量，以秒为单位</param>
            <returns>滤波后序列</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.SOSFilter(System.Double[0:,0:],System.Double[])">
            <summary>
            使用级联的二阶滤波器对单通道信号进行滤波，架构是转置的Direct Form II型，用于降低高阶次滤波器的数值精度误差
            </summary>
            <param name="sos">二阶滤波器系数数组，数组大小为[级联数,6]，每一行代表一级二阶滤波器，
            前三列代表分子系数，后三列代表分母系数</param>
            <param name="x">单通道输入信号</param>
            <returns>滤波后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.SOSFilter(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            使用级联的二阶滤波器对多通道信号进行滤波，架构是转置的Direct Form II型，用于降低高阶次滤波器的数值精度误差
            </summary>
            <param name="sos">二阶滤波器系数数组，数组大小为[级联数,6]，每一行代表一级二阶滤波器，
            前三列代表分子系数，后三列代表分母系数</param>
            <param name="x">多通道输入信号，通道按列排列</param>
            <returns>滤波后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.SOSFilter(System.Double[0:,0:],System.Double[],System.Double[0:,0:])">
            <summary>
            使用级联的二阶滤波器对输入序列进行滤波，架构是转置的Direct Form II型，用于降低高阶次滤波器的数值精度误差
            </summary>
            <param name="sos">二阶滤波器系数数组，数组大小为[级联数,6]，每一行代表一级二阶滤波器，
            前三列代表分子系数，后三列代表分母系数</param>
            <param name="zi">滤波器延迟的初始条件，数组大小为[z, 2]，其中n为级联的滤波器数量</param>
            <param name="x">输入序列</param>
            <returns>滤波后序列和滤波器延迟的最终条件</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.SOSFilter_zi(System.Double[0:,0:])">
            <summary>
            计算SOS滤波器的初始状态，以便滤波器的输出从与要滤波的信号的第一个元素相同的值开始
            </summary>
            <param name="sos">二阶滤波器系数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.CheckSOS(System.Double[0:,0:])">
            <summary>
            检查二阶滤波器系数数组
            </summary>
            <param name="sos"></param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.ZeroPhaseFilter(System.Double[],System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.PadType,System.Int32)">
            <summary>
            对输入信号进行正向和反向滤波，滤波后信号和原信号没有相位延迟，已经消除两端瞬态效应
            </summary>
            <param name="b">分子系数</param>
            <param name="a">分母系数</param>
            <param name="x">输入信号</param>
            <param name="padType">延拓类型，默认为奇延拓</param>
            <param name="padLength">首尾延拓元素的个数，必须小于x的长度-1</param>
            <returns>滤波后序列</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.ZeroPhaseFilter(System.Double[0:,0:],System.Double[],SeeSharpTools.JY.DSP.Utility.Filter1D.PadType,System.Int32)">
            <summary>
            使用级联的二阶滤波器对输入序列进行前后向滤波，滤波后信号和原信号没有相位延迟，已经消除两端瞬态效应
            </summary>
            <param name="sos">
            二阶滤波器系数数组，数组大小为[级联数,6]，每一行代表一级二阶滤波器，
            前三列代表分子系数，后三列代表分母系数
            </param>
            <param name="x">输入序列</param>
            <param name="padType">延拓类型</param>
            <param name="padLength">首尾延拓元素的个数，必须小于x的长度-1</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.IIRFiltering.CheckPad(SeeSharpTools.JY.DSP.Utility.Filter1D.PadType,System.Int32,System.Double[],System.Int32)">
            <summary>
            检查零相位滤波器的延拓参数
            </summary>
            <param name="padType">延拓类型</param>
            <param name="padLength">首尾延拓元素的个数</param>
            <param name="x">输入信号</param>
            <param name="ntaps">最大系数长度</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.SmoothingType">
            <summary>
            平滑滤波器的类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.SmoothingType.MovingAverage">
            <summary>
            移动平均
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.SmoothingType.Exponential">
            <summary>
            指数
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterShape">
            <summary>
            移动平均滤波器的形状
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterShape.Rectangular">
            <summary>
            移动平均窗中的所有采样在计算每个平滑输出采样时有相同的权值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.FilterShape.Exponential">
            <summary>
            应用于采样的移动加权窗是三角形的，峰值出现在窗中间，两边对称斜向下降
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.PadType">
            <summary>
            延拓类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PadType.None">
            <summary>
            不扩展
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PadType.Odd">
            <summary>
            奇对称延拓
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PadType.Even">
            <summary>
            偶对称延拓
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.PadType.Constant">
            <summary>
            常数延拓
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate">
            <summary>
            多采样率信号处理，将均匀或非均匀数据重采样为新固定速率。执行抽取和线性插值或更高阶插值，而不引入混叠
            </summary>
            <summary>
            多采样率信号处理，将均匀或非均匀数据重采样为新固定速率。执行抽取和线性插值或更高阶插值，而不引入混叠
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.FIRInterpolation(System.Int32,System.Int32,System.Double)">
            <summary>
            使用带限插值法指定频率和增益，然后使用最小二乘法设计带限的线性FIR滤波器
            </summary>
            <param name="r">插值点数，对每r个样本出现r-1个0的信号进行滤波</param>
            <param name="p">非零点数，使用最近的2*p个采样点</param>
            <param name="alpha">原始信号带宽相对奈奎斯特频率的倍数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.FIRInterpolation(System.Int32,System.Int32)">
            <summary>
            使用拉格朗日多项式插值法设计带限的线性FIR滤波器，当r和n都为偶数时是非线性FIR滤波器
            </summary>
            <param name="r">插值点数，对每r个样本出现r-1个0的序列进行多项式内插</param>
            <param name="n">拉格朗日多项式阶数，当n为偶数时系数长度是length (n+1)*r，
            当n为奇数是系数长度是length (n+1)*r-1</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Upsample(System.Double[],System.Int32,System.Int32)">
            <summary>
            通过升采样因子在输入序列中插入零
            </summary>
            <param name="x">输入序列</param>
            <param name="upsamplingFactor">升采样因子，在相邻两个采样点之间插入upsamplingFactor-1个0</param>
            <param name="offset">偏移量，必须大于等于0并且小于升采样因子</param>
            <returns>输出的升采样数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Downsample(System.Double[],System.Int32,System.Int32)">
            <summary>
            通过降采样因子对输入序列进行降采样
            </summary>
            <param name="x">输入序列</param>
            <param name="downsamplingFactor">降采样因子，必须大于0</param>
            <param name="offset">偏移量，必须大于等于0并且小于降采样因子</param>
            <returns>输出的降采样数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.UpFIRDown(System.Double[0:,0:],System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            使用多相插值器对多通道输入信号先进行升采样，然后执行FIR滤波，最后进行降采样
            </summary>
            <param name="x">多通道输入信号，通道按列排列</param>
            <param name="h">多通道滤波器的冲激响应，通道按列排列</param>
            <param name="p">升采样因子</param>
            <param name="q">降采样因子</param>
            <returns>输出信号，列数等于信号通道数，行数等于 ceil(((length(x)-1)*p+length(h))/q)</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.UpFIRDown(System.Double[0:,0:],System.Double[],System.Int32,System.Int32)">
            <summary>
            使用多相插值器对多通道输入信号先进行升采样，然后执行FIR滤波，最后进行降采样，使用同一滤波器
            </summary>
            <param name="x">多通道输入信号，通道按列排列</param>
            <param name="h">滤波器的冲激响应</param>
            <param name="p">升采样因子</param>
            <param name="q">降采样因子</param>
            <returns>输出信号，列数等于信号通道数，行数等于 ceil(((length(x)-1)*p+length(h))/q)</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Resample(System.Double[],System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            对输入信号进行均匀重采样，使用最小二乘法设计FIR低通抗混叠滤波器，并施加Kaiser窗，最后进行多相滤波
            </summary>
            <param name="x">输入信号</param>
            <param name="p">升采样因子</param>
            <param name="q">降采样因子</param>
            <param name="n">控制抗混叠滤波器的相对长度，滤波器阶数等于2 × n × max(p,q)</param>
            <param name="beta">Kaiser窗参数，决定滤波器执行的平滑量，更大的 beta 值表示具有更大的平滑处理，适用于具有瞬变或显著噪声的信号</param>
            <returns>重采样后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Resample(System.Double[0:,0:],System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            对多通道输入信号进行均匀重采样，使用最小二乘法设计FIR低通抗混叠滤波器，并施加Kaiser窗，最后进行多相滤波
            </summary>
            <param name="x">多通道输入信号，通道按列排列</param>
            <param name="p">升采样因子</param>
            <param name="q">降采样因子</param>
            <param name="n">控制抗混叠滤波器的相对长度，滤波器阶数等于2 × n × max(p,q)</param>
            <param name="beta">Kaiser窗参数，决定滤波器执行的平滑量，更大的 beta 值表示具有更大的平滑处理，适用于具有瞬变或显著噪声的信号</param>
            <returns>重采样后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Decimate(System.Double[],System.Int32,SeeSharpTools.JY.DSP.Utility.Filter1D.AntialiasingFilterType,System.Int32)">
            <summary>
            根据抽取因子使用较低的采样率对原信号在抗混叠低通滤波后进行重采样，默认使用8阶切比雪夫I型低通滤波器，归一化截止频率为0.8/抽取因子，通带平坦度0.05dB。
            IIR滤波类型为零相位滤波，消除相位失真。
            如果滤波器类型选择FIR，默认使用30阶FIR加窗滤波器，截止频率为1/抽取因子。滤波后会对信号进行时移处理来补偿FIR滤波器延迟。
            </summary>
            <param name="x">输入信号</param>
            <param name="deciFactor">抽取因子，如果大于13，建议多次调用Decimate方法而不是一次性抽取</param>
            <param name="filterType">抗混叠滤波器类型，默认为IIR</param>
            <param name="order">滤波器阶数，为0使用默认阶数</param>
            <returns>抽取后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Interpolate(System.Double[],System.Int32)">
            <summary>
            根据插值因子因子使用较高的采样率对原信号在升采样后进行低通滤波
            </summary>
            <param name="x">输入信号</param>
            <param name="interpFactor">插值因子</param>
            <returns>插值后的信号</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.RationalFraction(System.Double,System.Double)">
            <summary>
            计算输入值的有理分式近似
            </summary>
            <param name="x">输入浮点数</param>
            <param name="tol">容差</param>
            <returns>分子和分母</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.FilterMagIndB(System.Double[],System.Double[],System.Double)">
            <summary>
            计算指定频率处滤波器的幅度响应，单位为dB
            </summary>
            <param name="b"></param>
            <param name="a"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.Multirate.Sinc(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            生成sinc信号
            </summary>
            <param name="sampleCount">Sinc信号的采样数</param>
            <param name="amplitude">Sinc信号的幅值</param>
            <param name="delay">生成信号时移动Sinc信号内的峰值</param>
            <param name="sampleRate">Sinc信号的采样率，与主sinc瓣的宽度成正比</param>
            <returns>输出Sinc信号</returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.AntialiasingFilterType">
            <summary>
            抗混叠滤波器类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.AntialiasingFilterType.IIR">
            <summary>
            IIR滤波器
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.AntialiasingFilterType.FIR">
            <summary>
            FIR滤波器
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.SpecialFiltering">
            <summary>
            Special Filtering
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.SpecialFiltering.Integrate(System.Double[],System.Double,System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.BandwidthOption,System.Double[]@)">
            <summary>
            对输入序列做数值积分
            </summary>
            <param name="x">输入序列</param>
            <param name="fs">采样率</param>
            <param name="HPF6dBFreq">-6dB截止频率</param>
            <param name="bw">带宽</param>
            <param name="initVal">初值，可以为null，如果需要连续处理，则需要每次传递同一变量</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Filter1D.SpecialFiltering.Differentiate(System.Double[],System.Double,SeeSharpTools.JY.DSP.Utility.Filter1D.BandwidthOption,System.Double[]@)">
            <summary>
            对输入序列x做数值微分
            </summary>
            <param name="x">输入序列</param>
            <param name="fs">序列的采样率</param>
            <param name="bw">带宽</param>
            <param name="initVal">初值，可以为null，如果需要连续处理，则需要每次传递同一变量</param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Filter1D.BandwidthOption">
            <summary>
            带宽类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.BandwidthOption.NarrowBand">
            <summary>
            窄带
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Filter1D.BandwidthOption.WideBand">
            <summary>
            宽带
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.ArrayUtility">
            <summary>
            数组操作类
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Norm(System.Double[],System.Double)">
            <summary>
            计算一维输入数组的欧几里德范数
            </summary>
            <param name="x">一维输入数组</param>
            <param name="p">范数类型，指定为 2（默认值）、正实数标量、Inf 或 -Inf</param>
            <returns>范数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Norm(System.Double[0:,0:],System.Double,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列计算二维输入数组的欧几里德范数
            </summary>
            <param name="x">二维输入数组</param>
            <param name="p">范数类型，指定为 2（默认值）、正实数标量、Inf 或 -Inf</param>
            <param name="direction">行列方向</param>
            <returns>范数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Add``1(``0[],``0[])">
            <summary>
            一维数组按元素相加求和
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">第一个一维数组</param>
            <param name="y">第二个一维数组</param>
            <returns>求和结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Add``1(``0[0:,0:],``0[0:,0:])">
            <summary>
            二维数组按元素相加求和
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">第一个二维数组</param>
            <param name="y">第二个二维数组</param>
            <returns>求和结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Add``1(``0[],``0)">
            <summary>
            一维数组和标量相加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入数组</param>
            <param name="scalar">标量值</param>
            <returns>求和结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Add``1(``0[0:,0:],``0)">
            <summary>
            二维数组和标量相加
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">二维输入数组</param>
            <param name="scalar">标量值</param>
            <returns>求和结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Add``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行或者按列相加
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="y">待加的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>求和结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Substract``1(``0[],``0)">
            <summary>
            一维数组和标量相减
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入数组</param>
            <param name="scalar">标量值</param>
            <returns>相减结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Substract``1(``0[],``0[])">
            <summary>
            一维数组按元素相减
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">第一个一维数组</param>
            <param name="y">第二个一维数组</param>
            <returns>相减结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Substract``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行或者按列相减
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="y">待加的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>相减结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Substract``1(``0[0:,0:],``0[0:,0:])">
            <summary>
            二维数组按元素相减
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">第一个二维数组</param>
            <param name="y">第二个二维数组</param>
            <returns>相减结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[],``0)">
            <summary>
            一维数组和标量相乘
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入数组</param>
            <param name="scalar">标量值</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[],``0[])">
            <summary>
            两个一维数组按元素相乘
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">第一个一维数组</param>
            <param name="y">第二个一维数组</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[0:,0:],``0)">
            <summary>
            二维数组和标量相乘
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="scalar">标量值</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply(System.Numerics.Complex[0:,0:],System.Double[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行元素或者列元素相乘
            </summary>
            <param name="x">原始二维数组</param>
            <param name="y">待乘的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply(System.Double[0:,0:],System.Numerics.Complex[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行元素或者列元素相乘
            </summary>
            <param name="x">原始二维数组</param>
            <param name="y">待乘的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行元素或者列元素相乘
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="y">待乘一维数组</param>
            <param name="direction">行列方向</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[],``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            一维数组和二维数组按行元素或者列元素相乘
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始一维数组</param>
            <param name="y">待乘二维数组</param>
            <param name="direction">行列方向</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Multiply``1(``0[0:,0:],``0[0:,0:])">
            <summary>
            二维数组按元素相乘
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">第一个二维数组</param>
            <param name="y">第二个二维数组</param>
            <returns>乘积结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[],``0)">
            <summary>
            一维数组和标量相除
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入数组</param>
            <param name="scalar">标量值</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[],``0[])">
            <summary>
            两个一维数组按元素相除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">第一个一维数组</param>
            <param name="y">第二个一维数组</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[0:,0:],``0)">
            <summary>
            二维数组和标量相除
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="scalar">标量值</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            二维数组和一维数组按行元素或者列元素相除
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">原始二维数组</param>
            <param name="y">待乘的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[],``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            一维数组和二维数组按行元素或者列元素相除
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">原始二维数组</param>
            <param name="y">待乘的一维数组</param>
            <param name="direction">行列方向</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Divide``1(``0[0:,0:],``0[0:,0:])">
            <summary>
            二维数组按元素相除
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">第一个二维数组</param>
            <param name="y">第二个二维数组</param>
            <returns>相除结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Mean(System.Int32[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            对二维数组按行或者按列取平均
            </summary>
            <param name="x">原始二维数组</param>
            <param name="direction">行列方向，为row时计算每一行的平均值</param>
            <returns>平均结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Mean(System.Double[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            对二维数组按行或者按列取平均
            </summary>
            <param name="x">原始二维数组</param>
            <param name="direction">行列方向，为row时计算每一行的平均值</param>
            <returns>平均结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Std(System.Double[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            对二维数组按行或者按列求标准差
            </summary>
            <param name="x">原始二维数组</param>
            <param name="direction">行列方向，为row时计算每一行的标准差</param>
            <returns>标准差结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Abs(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            按元素计算一维实数数组的绝对值
            </summary>
            <param name="x">二维复数数组</param>
            <returns>绝对值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Abs(System.Collections.Generic.IEnumerable{System.Numerics.Complex})">
            <summary>
            按元素计算一维复数数组的绝对值
            </summary>
            <param name="x">二维复数数组</param>
            <returns>绝对值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Abs(System.Double[0:,0:])">
            <summary>
            按元素计算二维实数数组的绝对值
            </summary>
            <param name="x">二维复数数组</param>
            <returns>绝对值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Abs(System.Numerics.Complex[0:,0:])">
            <summary>
            按元素计算二维复数数组的绝对值
            </summary>
            <param name="x">二维复数数组</param>
            <returns>绝对值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sign(System.Double[])">
            <summary>
            返回输入一维数组的符号值
            </summary>
            <param name="x">一维输入数组</param>
            <returns>取符号结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sign(System.Double[0:,0:])">
            <summary>
            返回输入一维数组的符号值
            </summary>
            <param name="x">一维输入数组</param>
            <returns>取符号结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Power(System.Double[],System.Double)">
            <summary>
            按元素计算一维实数数组的幂次方
            </summary>
            <param name="x">一维实数数组</param>
            <param name="exponent">幂次</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Power(System.Numerics.Complex[],System.Double)">
            <summary>
            按元素计算一维复数数组的幂次方
            </summary>
            <param name="x">一维复数数组</param>
            <param name="exponent">幂次</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.AbsPower(System.Numerics.Complex[],System.Double)">
            <summary>
            按元素计算一维复数数组的绝对值的幂次方
            </summary>
            <param name="x">一维复数数组</param>
            <param name="exponent">幂次</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Power(System.Double[0:,0:],System.Double)">
            <summary>
            按元素计算二维实数数组的幂次方
            </summary>
            <param name="x">二维实数数组</param>
            <param name="exponent">幂次</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.AbsPower(System.Numerics.Complex[0:,0:],System.Double)">
            <summary>
            按元素计算二维复数数组的绝对值的幂次方
            </summary>
            <param name="x">二维复数数组</param>
            <param name="exponent">幂次</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Exp(System.Double[])">
            <summary>
            一维实数数组按元素计算e的幂次方
            </summary>
            <param name="x">一维实数数组</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Exp(System.Numerics.Complex[])">
            <summary>
            一维复数数组按元素计算e的幂次方
            </summary>
            <param name="x">一维复数数组</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Exp(System.Double[0:,0:])">
            <summary>
            二维实数数组按元素计算e的幂次方
            </summary>
            <param name="x">二维实数数组</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Exp(System.Numerics.Complex[0:,0:])">
            <summary>
            二维复数数组按元素计算e的幂次方
            </summary>
            <param name="x">二维复数数组</param>
            <returns>幂次方结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Log(System.Double[0:,0:],System.Double)">
            <summary>
            按元素计算二维实数数组的在指定底时的对数
            </summary>
            <param name="x">二维实数数组</param>
            <param name="newbase">对数基底</param>
            <returns>对数结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Conjugate(System.Numerics.Complex[])">
            <summary>
            计算一维复数数组的共轭数组
            </summary>
            <param name="x">一维复数数组</param>
            <returns>共轭数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Conjugate(System.Numerics.Complex[0:,0:])">
            <summary>
            计算二维复数数组的共轭数组
            </summary>
            <param name="x">二维复数数组</param>
            <returns>共轭数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CumSum``1(``0[],System.Boolean)">
            <summary>
            计算输入数组的累计和
            </summary>
            <param name="x">一维输入数组</param>
            <param name="reverse">累加方向是否为反向，默认为正向累加</param>
            <returns>累计和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CumSum``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction,System.Boolean)">
            <summary>
            计算输入数组的累计和
            </summary>
            <param name="x">一维输入数组</param>
            <param name="direction">行列方向，为row时计算每一行的累计和</param>
            <param name="reverse">累加方向是否为反向，默认为正向累加</param>
            <returns>累计和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CumProduct``1(``0[],System.Boolean)">
            <summary>
            计算输入数组的累计乘积
            </summary>
            <param name="x">一维输入数组</param>
            <param name="reverse">累乘方向是否为反向，默认为正向累乘</param>
            <returns>累计乘积</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Diff``1(``0[])">
            <summary>
            依次计算数组中相邻两个元素的差值，差分和近似导数
            </summary>
            <param name="x">一维输入数组</param>
            <returns>差值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Diff``1(``0[0:,0:])">
            <summary>
            计算一个两列二维数组相邻列的差值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">二维输入数组</param>
            <returns>差值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Diff``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            计算二维数组相邻行或者列的差值
            </summary>
            <param name="x">二维输入数组</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sum(System.Numerics.Complex[])">
            <summary>
            计算一维复数数组所有元素的和
            </summary>
            <param name="x">一维复数输入数组</param>
            <returns>元素和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sum(System.Double[0:,0:])">
            <summary>
            计算二维数组所有元素的和
            </summary>
            <param name="x">二维输入数组</param>
            <returns>元素和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sum(System.Numerics.Complex[0:,0:])">
            <summary>
            计算二维数组所有元素的和
            </summary>
            <param name="x">二维输入数组</param>
            <returns>元素和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sum(System.Double[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列计算二维数组某一维度的元素和
            </summary>
            <param name="x">二维输入数组</param>
            <param name="direction">行列方向，为row时对每一行进行求和</param>
            <returns>元素和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sum(System.Numerics.Complex[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列计算二维数组某一维度的元素和
            </summary>
            <param name="x">二维输入数组</param>
            <param name="direction">行列方向，为row时对每一行进行求和</param>
            <returns>元素和</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ToReal(System.Collections.Generic.IEnumerable{System.Numerics.Complex})">
            <summary>
             计算一维复数数组的实部
            </summary>
            <param name="x">一维复数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ToComplex(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            将一维实数数组转换为复数数组
            </summary>
            <param name="x">一维实数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ToComplex(System.Double[0:,0:])">
            <summary>
            将二维实数数组转换为复数数组
            </summary>
            <param name="x">二维实数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ToReal(System.Numerics.Complex[0:,0:])">
            <summary>
            计算二维复数数组的实部
            </summary>
            <param name="x">二维复数数组</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Rem(System.Double,System.Double)">
            <summary>
            计算除后的余数（求余运算），符号和被除数相同
            </summary>
            <param name="x">被除数</param>
            <param name="y">除数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Mod(System.Double,System.Double)">
            <summary>
            计算除后的余数（取模运算），符号和除数相同
            </summary>
            <param name="x">被除数</param>
            <param name="y">除数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Mod(System.Double[],System.Double)">
            <summary>
            计算除后的余数（取模运算），符号和除数相同
            </summary>
            <param name="x">被除数</param>
            <param name="y">除数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.AccumArray``1(System.Int32[],System.Int32[],``0[],System.Int32[])">
            <summary>
            根据行索引和列索引通过对一维数组中的元素进行累加来对组数据求和，然后计算每组的总和
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rowIndices">输出数组的行索引</param>
            <param name="colIndices">输出数组的列索引</param>
            <param name="src">要累加的原始一维数组</param>
            <param name="size">输出数组维度，长度为2，行数和列数都必须大于等于索引数组长度，额外元素用0填充</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Gradient(System.Double[])">
            <summary>
            计算一维数组的数值梯度 ∂F/∂x，即 x（水平）方向上的差分，点之间的间距假定为 1
            </summary>
            <param name="f">一维输入数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Product(System.Numerics.Complex[])">
            <summary>
            计算一维复数数组中所有元素的乘积，数组为空时返回1
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Product(System.Double[])">
            <summary>
            计算一维数组中所有元素的乘积，数组为空时返回1
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Product(System.Int32[])">
            <summary>
            计算一维数组中所有元素的乘积，数组为空时返回1
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.AreEqual(System.Double[],System.Double[],System.Double)">
            <summary>
            检查两个复数数组是否相等
            </summary>
            <param name="x">第一个数组</param>
            <param name="y">第二个数组</param>
            <param name="tolerance">容差</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.AreEqual(System.Numerics.Complex[],System.Numerics.Complex[],System.Double)">
            <summary>
            检查两个复数数组是否相等
            </summary>
            <param name="x">第一个数组</param>
            <param name="y">第二个数组</param>
            <param name="tolerance">容差</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            获取一维数组子集
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始一维数组</param>
            <param name="index">起始索引</param>
            <param name="count">索引长度</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[],System.Int32[])">
            <summary>
            获取数组中指定索引集合处的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维数组</param>
            <param name="indices">索引集合</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[],System.Predicate{``0})">
            <summary>
            获取一维数组中满足要求的所有元素
            </summary>
            <param name="x">输入一维数组</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足条件的所有元素的索引，如果没有元素满足条件则返回空数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[],System.Int32,System.Int32,System.Int32)">
            <summary>
            获取数组中指定索引集合处的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维数组</param>
            <param name="stat">起始索引</param>
            <param name="step">步进值</param>
            <param name="stop">终止索引</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            获取二维数组的某行或者某列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="index">行列索引</param>
            <param name="direction">行列方向</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Int32[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            获取二维数组中指定行索引或者列索引集合处的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="indices">索引集合</param>
            <param name="direction">行列方向</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Int32,System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            获取二维数组的多行或者多列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <param name="index">起始索引</param>
            <param name="count">子数组中行或者列的数量</param>
            <param name="direction">行列方向</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Int32[],System.Int32[])">
            <summary>
            获取二维数组指定行索引和列索引的数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入二维数组</param>
            <param name="rowIndices">行索引集合</param>
            <param name="colIndices">列索引集合</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取二维数组指定起始位置的连续多行多列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入二维数组</param>
            <param name="startRowIndex">起始行索引</param>
            <param name="rowCount">行数</param>
            <param name="startColIndex">起始列索引</param>
            <param name="colCount">列数</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[],System.Boolean[])">
            <summary>
            根据索引数组仅保留原始一维数组中的部分元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维数组</param>
            <param name="idxKeep">指示是否保留此索引位置的布尔数组</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SubArray``1(``0[0:,0:],System.Boolean[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            根据索引数组仅保留原始二维数组中的部分元素，按列或者按行返回一维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入二维数组</param>
            <param name="idxKeep">指示是否保留此索引位置的布尔数组</param>
            <param name="direction">行列方向</param>
            <returns>数组子集</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SetRow``1(``0[0:,0:],System.Int32,``0[])">
            <summary>
            设定二维数组某一行的值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">源数组</param>
            <param name="rowIndex">行索引</param>
            <param name="subRow">行值</param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SetColumn``1(``0[0:,0:],System.Int32,``0[])">
            <summary>
            设定二维数组某一列的值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">源数组</param>
            <param name="columnIndex">列索引</param>
            <param name="subColumn">列值</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ReplaceSubArray``1(``0[],``0[0:,0:]@,System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            替换二维数组的某行或者某列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">替换数组</param>
            <param name="dst">被替换的目标数组</param>
            <param name="index">行列索引</param>
            <param name="direction">行列方向</param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ReplaceSubArray``1(``0[0:,0:],``0[0:,0:]@,System.Int32,System.Int32)">
            <summary>
            替换二维数组的连续多行或者多列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">替换数组</param>
            <param name="dst">被替换的目标数组</param>
            <param name="rowIndex">起始行索引位置</param>
            <param name="columnIndex">起始列索引位置</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ReplaceSubArray``1(``0[0:,0:],``0[0:,0:]@,System.Int32[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            替换二维数组指定索引的多行或者多列数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">替换数组</param>
            <param name="dst">被替换的目标数组</param>
            <param name="indices">需要替换的行或者列索引集合</param>
            <param name="direction">替换行列方向</param>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Transpose``1(``0[0:,0:])">
            <summary>
            计算二维数组的转置
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">源数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.InsertArraySubset``1(``0[0:,0:],``0[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            在原二维数组的指定索引位置插入新的二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始二维数组</param>
            <param name="insertArray">要插入的二维数组</param>
            <param name="index">插入索引，可以是行索引或者列索引</param>
            <param name="direction">行列方向</param>
            <returns>输出的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Center``1(``0[],System.Int32)">
            <summary>
            获取原数组指定长度的中心部分
            </summary>
            <param name="x">一维输入数组</param>
            <param name="size">输出数组长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.RemoveAt``1(``0[],System.Int32)">
            <summary>
            移除数组中指定索引处的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">一维输入数组</param>
            <param name="index">需要移除的元素索引</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将一维数组重排为指定格式的二维数组
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">输入一维数组</param>
            <param name="direction">行列方向</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[],``0[])">
            <summary>
            连接两个一维数组，输出新的一维数组
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="src1">第一个数组</param>
            <param name="src2">第二个数组</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列连接两个一维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src1">第一个数组</param>
            <param name="src2">第二个数组</param>
            <param name="direction">行列方向</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[],``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列连接一维数组和二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src1">一维数组</param>
            <param name="src2">二维数组</param>
            <param name="direction">行列方向</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者按列连接一维数组和二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src1">二维数组</param>
            <param name="src2">一维数组</param>
            <param name="direction">行列方向</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[0:,0:],``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            连接两个二维数组，超出维度部分的元素会被舍弃
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src1">第一个数组</param>
            <param name="src2">第二个数组</param>
            <param name="direction">行列方向，为row时列数不变，为column时行数不变</param>
            <returns>创建的新数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.BuildArray``1(``0[][])">
            <summary>
            连接多个一维数组，超出维度部分的元素会被舍弃
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceArrays">多个一维输入数组</param>
            <returns>创建的新数组，行等于一维数组个数，列等于最小的一维数组大小</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SplitArray``1(``0[],System.Int32)">
            <summary>
            在指定索引处分离一维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">输入一维数组</param>
            <param name="index">索引为负数或0，第一个子数组为空。 如索引大于等于数组大小，第二个子数组为空</param>
            <returns>分离后的两个一维数组，第一个数组包含源数组前index个元素，第二数组包含剩下的其它元素</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SplitArray``1(``0[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            在指定索引处分离二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">输入二维数组</param>
            <param name="index">起始索引位置</param>
            <param name="direction">行列方向</param>
            <returns>分离后的两个二维数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Interleave``1(``0[][])">
            <summary>
            交织多个一维输入数组中的相应元素，形成输出数组
            当输入数组的大小不同时，交织的数组的元素数等于最小输入数组的元素数乘以输入数组数
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceArrays">多个一维输入数组</param>
            <returns>交织后完成后的数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Decimate``1(``0[],System.Int32)">
            <summary>
            使一维数组的元素分成若干输出数组，依次输出元素，舍弃所有使输出数组长度不同的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始一维数组</param>
            <param name="count">需要输出的一维数组的个数</param>
            <returns>抽取后的多个一维数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CircularShift``1(``0[],System.Int32)">
            <summary>
            对一维数组中的元素进行循环移位
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始一维数组</param>
            <param name="count">移位数量，count大于0时向右移位，count小于0时向左移位</param>
            <returns>移位后的一维数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CircularShift``1(``0[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            对二维数组中的元素沿着行或者列方向进行循环移位
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始二维数组</param>
            <param name="count">移位数量，count大于0时向右移位，count小于0时向左移位</param>
            <param name="direction">行移位还是列移位</param>
            <returns>移位后的二维数组</returns>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.DataWrap``1(``0[],System.Int32)">
            <summary>
            将一维数组分割成指定长度的多个一维数组，长度不足的补零，最后将数组对应索引的元素相加
            </summary>
            <param name="src">输入一维数组</param>
            <param name="length">输出数组长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Reshape``1(``0[],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将一维数组重构为指定行数的二维数组，元素保持在原数组中的列顺序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始一维数组</param>
            <param name="rows">新的二维数组的行数</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Reshape``1(``0[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
             将原维二维数组重构为指定行数的新的二维数组，元素保持在原数组中的列顺序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始二维数组</param>
            <param name="rows">新的二维数组的行数</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Reshape``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将二维数组按照行或者列方向重排为一维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">二维输入数组</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sort(System.Int32[],SeeSharpTools.JY.DSP.Utility.SortDirection)">
            <summary>
            对一维实数数组进行排序
            </summary>
            <param name="x">一维实数输入</param>
            <param name="sortDirection">排序方向，默认为升序</param>
            <returns>排序后的数组以及每个元素在原数组中的索引值</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sort(System.Double[],SeeSharpTools.JY.DSP.Utility.SortDirection)">
            <summary>
            对一维实数数组进行排序
            </summary>
            <param name="x">一维实数输入</param>
            <param name="sortDirection">排序方向，默认为升序</param>
            <returns>排序后的数组以及每个元素在原数组中的索引值</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Sort(System.Numerics.Complex[],SeeSharpTools.JY.DSP.Utility.SortDirection,SeeSharpTools.JY.DSP.Utility.ComparisonMethod)">
            <summary>
            对一维实数数组进行排序
            </summary>
            <param name="x">一维实数输入</param>
            <param name="sortDirection">排序方向，默认为升序</param>
            <param name="method">比较方法，默认按绝对值大小比较</param>
            <returns>排序后的数组以及每个元素在原数组中的索引值</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Unique``1(``0[],SeeSharpTools.JY.DSP.Utility.SetOrder)">
            <summary>
            返回一维数组中的唯一值
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="src">输入一维数组</param>
            <param name="setOrder">排序标志，默认不排序</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Unique(System.Double[0:,0:],System.Int32,SeeSharpTools.JY.DSP.Utility.SetOrder,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            返回二维数数组唯一的行或者列
            </summary>
            <param name="x">输入二维数组</param>
            <param name="sortIndex">排序索引，如果按行返回则为列索引，按列返回则为行索引</param>
            <param name="setOrder">排序标志，默认不排序</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Flip``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            反转二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">二维输入数组</param>
            <param name="direction">行列方向，为row时反转每列中元素的顺序（对折行）</param>
            <returns>反转后的数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Clip``1(``0[],``0,``0)">
            <summary>
            将数组元素钳制在指定的上下限范围内
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入数组</param>
            <param name="lowRange">上限值</param>
            <param name="highRange">下限值</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.RemoveZeros(System.Double[])">
            <summary>
            移除数组的前导零和后补零
            </summary>
            <param name="x">输入数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Max``1(``0[])">
            <summary>
            寻找一维数组中的最大值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <returns>最大值和最大值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Max``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            寻找二维数组每一行或者每一列的最大值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <param name="direction">行列方向</param>
            <returns>最大值和最大值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Min``1(``0[])">
            <summary>
            寻找一维数组中的最小值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <returns>最小值和最小值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Min``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            寻找二维数组每一行或者每一列的最小值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <param name="direction">行列方向</param>
            <returns>最小值和最小值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.MaxAndMin``1(``0[])">
            <summary>
            寻找一维数组中的最大值和最小值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <returns>最大值，最大值索引，最小值，最小值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.MaxAndMin``1(``0[],System.Int32,System.Int32)">
            <summary>
            寻找一维数组在指定范围内的最大值和最小值及其索引
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="x">输入一维数组</param>
            <param name="startIndex">起始索引</param>
            <param name="endIndex">终止索引</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.MaxAndMin``1(``0[0:,0:])">
            <summary>
            寻找二维数组中的最大值和最小值及其行列索引
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始二维数组</param>
            <returns>最大值，最大值索引，最小值，最小值索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.FindCount``1(``0[],System.Predicate{``0})">
            <summary>
            查找一维数组中满足要求的元素个数
            </summary>
            <param name="array">要搜索的一维数组</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足要求的元素个数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.FindCount``1(``0[0:,0:],System.Predicate{``0})">
            <summary>
            查找二维数组中满足要求的元素个数
            </summary>
            <param name="array">要搜索的二维数组</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足要求的元素个数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.FindCount``1(``0[0:,0:],System.Int32,System.Predicate{``0})">
            <summary>
            查找二维数组某一列中满足要求的元素个数
            </summary>
            <param name="array">要搜索的二维数组</param>
            <param name="columnIndex">列索引</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足要求的元素个数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.FindAllIndex``1(``0[],System.Predicate{``0})">
            <summary>
            查找一维数组中满足要求的所有元素的线性索引
            </summary>
            <param name="array">要搜索的一维数组</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足条件的所有元素的索引，如果没有元素满足条件则反馈空数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.FindAllIndex``1(``0[0:,0:],System.Predicate{``0})">
            <summary>
            按列查找二维数组中满足要求的所有元素的线性索引
            </summary>
            <param name="array">要搜索的二维数组</param>
            <param name="match">定义要搜索的元素的条件</param>
            <returns>满足条件的所有元素的索引，如果没有元素满足条件则反馈空数组</returns>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SearchSorted(System.Double[],System.Double,SeeSharpTools.JY.DSP.Utility.SearchSide)">
            <summary>
            在数组中执行二进制搜索，并返回将在其中插入指定值以维持搜索顺序的索引
            </summary>
            <param name="x">输入数组</param>
            <param name="value">待插入元素</param>
            <param name="searchSide">搜索方向</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.SearchSorted(System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.SearchSide)">
            <summary>
            在数组中执行二进制搜索，并返回将在其中插入指定值以维持搜索顺序的索引
            </summary>
            <param name="x">输入数组</param>
            <param name="value">待插入数组</param>
            <param name="searchSide">搜索方向</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Interp(System.Double[],System.Double[],System.Double[],SeeSharpTools.JY.DSP.Utility.InterpMethod)">
            <summary>
            根据选择的插值方法对一维实数数组进行插值
            </summary>
            <param name="x">一维样本点数组</param>
            <param name="v">一维样本值数组</param>
            <param name="xq">一维查询点数组</param>
            <param name="interpMethod">插值方法，默认为线性插值</param>
            <returns>插值后的数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Interp(System.Double[],System.Numerics.Complex[],System.Double[],SeeSharpTools.JY.DSP.Utility.InterpMethod)">
            <summary>
            根据选择的插值方法对一维复数数组进行插值（实部和虚部分别进行插值）
            </summary>
            <param name="x">一维样本点数组</param>
            <param name="v">一维样本值数组</param>
            <param name="xq">一维查询点数组</param>
            <param name="interpMethod">插值方法，默认为线性插值</param>
            <returns>插值后的数组</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Interp(System.Double[],System.Double[0:,0:],System.Double[],SeeSharpTools.JY.DSP.Utility.InterpMethod,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            根据选择的插值方法对二维数组按行或者按列进行插值
            </summary>
            <param name="x">一维样本点数组</param>
            <param name="v">二维样本值数组</param>
            <param name="xq">一维查询点数组</param>
            <param name="interpMethod">插值方法，默认为线性插值</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Interpolate``1(``0[],System.Double)">
            <summary>
            在原始一维数组的索引处线性插入一个值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">原始一维数组</param>
            <param name="fractionalIndex">分数索引</param>
            <returns>分数索引处的插值结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.ThresholdInterpolate(System.Double[],System.Double,System.Double)">
            <summary>
            在一维数组中插入点，比较阈值与开始索引位置以后的值，直至找到一对连续的元素，阈值大于等于第一个元素，小于等于第二个元素
            </summary>
            <param name="x">原始一维数组</param>
            <param name="threshold">阈值大小</param>
            <param name="startIndex">起始索引位置</param>
            <returns>插值完成的分数索引</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.InterpFFT(System.Double[],System.Int32)">
            <summary>
            使用傅里叶变换对一维数组进行插值，得到指定长度的新数组，适合周期性数据
            </summary>
            <param name="x">原始一维数组</param>
            <param name="length">新数组长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Concatenates``1(``0[0:,0:],``0[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将一维数组插入到二维数组的最后一行或者最后一列
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入二维数组</param>
            <param name="y">待插入的一维数组</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Concatenates``1(``0[0:,0:],``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            按行或者列连接两个二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">第一个二维数组</param>
            <param name="y">>第二个二维数组</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Repeat``1(System.Int32,System.Int32,``0)">
            <summary>
            创建指定行数和列数的二维数组并初始化为同一值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="rows">行数</param>
            <param name="columns">列数</param>
            <param name="value">初始值</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Replicate``1(``0[],System.Int32)">
            <summary>
            将一维数组复制指定次数，生成新的一维数组
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">输入一维数组</param>
            <param name="count">复制的次数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Replicate``1(``0[],System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将一维数组按行或者按列复制为指定维度的二维数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维数组</param>
            <param name="count">行或者列数量</param>
            <param name="direction">复制的行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Replicate``1(``0[0:,0:],System.Int32,System.Int32)">
            <summary>
            对原数组进行复制，指定行和列的重复因子
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入二维数组</param>
            <param name="rowFactor">行重复因子</param>
            <param name="colFactor">列重复因子</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.RepeatElement``1(``0[],System.Int32)">
            <summary>
            重复数组元素副本
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">一维输入数组</param>
            <param name="n">每个元素的重复次数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.RepeatElement``1(``0[],System.Int32[])">
            <summary>
            重复数组元素副本
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">一维输入数组</param>
            <param name="n">每个元素的重复次数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Trapz(System.Double[],System.Double[])">
            <summary>
            根据指定的点间距对一维数组进行积分
            </summary>
            <param name="x">点间距</param>
            <param name="y">数值数据</param>
            <returns>积分结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.Trapz(System.Double[],System.Double[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            根据指定的点间距对二维数组的每行或者每列进行积分
            </summary>
            <param name="x">点间距</param>
            <param name="y">数值数据</param>
            <param name="direction">行列方向</param>
            <returns>积分结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CumTrapz(System.Double[])">
            <summary>
            通过梯形法按单位间距计算一维输入数组的近似累积积分
            </summary>
            <param name="x">输入一维数组</param>
            <returns>积分结果</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.ArrayUtility.CumTrapz(System.Double[],System.Double[])">
            <summary>
            根据 x 指定的坐标对 y 进行积分
            </summary>
            <param name="x">均匀的标量间距</param>
            <param name="y">一维数值数据</param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Direction">
            <summary>
            行列方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Direction.Row">
            <summary>
            行方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.Direction.Column">
            <summary>
            列方向
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.InterpMethod">
            <summary>
            插值方法
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.Linear">
            <summary>
            线性插值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.LogLinear">
            <summary>
            对数线性插值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.Pchip">
            <summary>
            保形分段三次样条插值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.Cubic">
            <summary>
            三次多项式插值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.Akima">
            <summary>
            Akima 三次 Hermite 插值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.InterpMethod.Spline">
            <summary>
            分段三次样条插值
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.SortDirection">
            <summary>
            排序方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SortDirection.Ascend">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SortDirection.Descend">
            <summary>
            降序
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.SearchSide">
            <summary>
            查询方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SearchSide.Left">
            <summary>
            第一个符合条件的元素索引
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SearchSide.Right">
            <summary>
            最后一个符合条件的元素索引
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.SetOrder">
            <summary>
            顺序标志
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SetOrder.Ascend">
            <summary>
            升序
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SetOrder.Descend">
            <summary>
            降序
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.SetOrder.Stable">
            <summary>
            不排序
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.ComparisonMethod">
            <summary>
            复数大小的比较方法
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.ComparisonMethod.Abs">
            <summary>
            按绝对值
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.ComparisonMethod.Real">
            <summary>
            按实部
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.ComparisonMethod.Imaginary">
            <summary>
            按虚部
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.MathUtlity">
            <summary>
            数学函数
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.TruncateOrZeroPad``1(``0[],System.Int32)">
            <summary>
            对序列按照指定长度进行截断或者补零
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入序列</param>
            <param name="size">输出序列长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.GenerateHalfOpen(System.Double,System.Double,System.Double)">
            <summary>
            产生左开右闭的等差数列（不包含末尾元素）
            </summary>
            <param name="start"></param>
            <param name="step"></param>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.FactorialDivision(System.Int32,System.Int32)">
            <summary>
            generates (i1)!/(i1-i2)!=i1*(i1-1)*...*(i1-i2+1)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.PolynomialStability(System.Double[])">
            <summary>
            stabilizes atten polynomial with respect to the unit circle,
            it reflects roots with magnitudes greater than 1 inside the unit circle
            </summary>
            <param name="a">输入多项式系数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.EllipticIntegral(System.Double)">
            <summary>
            第一类完全椭圆积分
            </summary>
            <param name="k"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.EllipticDegree(System.Int32,System.Double)">
            <summary>
            Solve degree equation using nomes, Given n, m1, solve
            n * K(m) / K'(m) = K1(m1) / K1'(m1)
            </summary>
            <param name="n"></param>
            <param name="m1"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.EllipticJacobian(System.Double,System.Double)">
            <summary>
            雅可比椭圆函数
            </summary>
            <param name="u">输入参数</param>
            <param name="m">积分参数，在0~1之间</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.InverseEllipticJacobian(System.Numerics.Complex,System.Double)">
            <summary>
            雅可比椭圆函数的逆函数
            </summary>
            <param name="w"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.PolyFromRoots(System.Numerics.Complex[])">
            <summary>
            通过根创建多项式
            </summary>
            <param name="roots">多项式的复数根</param>
            <returns>多项式系数</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.BesselKZeros(System.Int32)">
            <summary>
            计算变形第二类贝塞尔函数的根
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.NewtonFindRoot(System.Func{System.Numerics.Complex,System.Numerics.Complex},System.Func{System.Numerics.Complex,System.Numerics.Complex},System.Numerics.Complex,System.Double,System.Int32)">
            <summary>
            使用Newton-Raphson方法寻找f(x)=0的根
            </summary>
            <param name="f"></param>
            <param name="initialGuess"></param>
            <param name="df"></param>
            <param name="accuracy"></param>
            <param name="maxIterations"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.CamposZeros(System.Int32)">
            <summary>
            计算N阶贝塞尔多项式的预估零点
            </summary>
            <param name="n">多项式阶数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.Aberth(System.Func{System.Numerics.Complex,System.Numerics.Complex},System.Func{System.Numerics.Complex,System.Numerics.Complex},System.Numerics.Complex[],System.Double,System.Int32)">
            <summary>
            使用Aberth-Ehrlich方法计算多项式的根
            </summary>
            <param name="f"></param>
            <param name="fp"></param>
            <param name="x0"></param>
            <param name="tol"></param>
            <param name="maxiter"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.SplitComplexReal(System.Numerics.Complex[])">
            <summary>
            Split into complex and real parts, combining conjugate pairs
            </summary>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.OddExtension(System.Double[],System.Int32)">
            <summary>
            对原数组进行奇对称延拓
            </summary>
            <param name="x">需要延拓的数组</param>
            <param name="n">延拓的元素个数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.EvenExtension(System.Double[],System.Int32)">
            <summary>
            对原数组进行偶对称延拓
            </summary>
            <param name="x">需要延拓的数组</param>
            <param name="n">延拓的元素个数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.ConstExtension(System.Double[],System.Int32)">
            <summary>
            对原数组进行常数延拓
            </summary>
            <param name="x">需要延拓的数组</param>
            <param name="n">延拓的元素个数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MathUtlity.LocalMax(System.Double[],System.Boolean)">
            <summary>
            finds location of local maxima
            </summary>
            <param name="x"></param>
            <param name="ignoreNegative"></param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.MatrixUtility">
            <summary>
            矩阵操作类
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.RemoveAt``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32)">
            <summary>
            移除向量中指定索引处的元素
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">一维输入向量</param>
            <param name="index">需要移除的元素索引</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Max``1(MathNet.Numerics.LinearAlgebra.Vector{``0})">
            <summary>
            寻找向量中的最大值及其索引
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入向量</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Min``1(MathNet.Numerics.LinearAlgebra.Vector{``0})">
            <summary>
            寻找向量中的最小值及其索引
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入向量</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.GetSubtVector``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32[])">
            <summary>
            获取输入向量中指定索引的子向量
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维向量</param>
            <param name="indices">指定索引</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.GetSubtVector``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Boolean[])">
            <summary>
            获取输入向量中指定索引的子向量
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">输入一维向量</param>
            <param name="idxKeep">布尔索引数组，为真则保留索引处元素</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Cumsum``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Boolean)">
            <summary>
            计算输入向量的累计和
            </summary>
            <param name="x">一维输入数组</param>
            <param name="reverse">累加方向是否为反向，默认为正向累加</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.TridiSolve(System.Double[],System.Double[],System.Double[],MathNet.Numerics.LinearAlgebra.Vector{System.Double})">
            <summary>
            求解三角矩阵组成的线性方程组
            </summary>
            <param name="a">主对角线上方第一条对角线的元素</param>
            <param name="b">主对角线元素</param>
            <param name="c">主对角线下方第一条对角线的元素</param>
            <param name="d">方程组右侧向量</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.TridiagEigen(System.Double[],System.Double[],System.Int32,System.Int32)">
            <summary>
            计算三对角矩阵的特征值
            </summary>
            <param name="c">主对角线元素</param>
            <param name="b">两条次对角线元素</param>
            <param name="m1"></param>
            <param name="m2"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.PCG(MathNet.Numerics.LinearAlgebra.Matrix{System.Numerics.Complex},MathNet.Numerics.LinearAlgebra.Vector{System.Numerics.Complex},System.Double,System.Int32,System.Int32,System.Double[])">
            <summary>
            使用预条件共轭梯度法求解线性方程组
            </summary>
            <param name="A">系数矩阵</param>
            <param name="b">线性方程右侧列向量</param>
            <param name="tol">方法容差</param>
            <param name="maxit">最大迭代次数</param>
            <param name="filterOrder">滤波器阶数，仅适用于VK滤波器算法</param>
            <param name="x0">初始估计值</param>
            <returns>线性方程组的解</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Center``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},System.Int32,System.Int32)">
            <summary>
            计算矩阵指定行数和列数的中间部分
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">输入矩阵</param>
            <param name="rows">输出矩阵行数</param>
            <param name="cols">输出矩阵列数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Kronecker``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},MathNet.Numerics.LinearAlgebra.Matrix{``0})">
            <summary>
            计算两个输入矩阵的 Kronecker 张量积，通过将 y 乘以 x 的各元素形成的一个大型矩阵
            </summary>
            <typeparam name="T"></typeparam>
            <param name="x">第一个输入矩阵</param>
            <param name="y">第二个输入矩阵</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.GetSubMatrix``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},System.Int32[],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            获取矩阵中指定行索引或者列索引集合处的子矩阵
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始二维数组</param>
            <param name="indices">索引集合</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Reshape``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将一维向量按照行或者列方向重构为指定行数的矩阵
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">一维向量</param>
            <param name="rows">矩阵行数</param>
            <param name="direction">行列顺序</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Reshape``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将矩阵按照行或者列方向重排为向量
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">输入矩阵</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Reshape``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
             将原维矩阵重构为指定行数的新矩阵，元素保持在原矩阵中的列顺序
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">原始矩阵</param>
            <param name="rows">新矩阵的行数</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Rotate``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},SeeSharpTools.JY.DSP.Utility.RotateDirection)">
            <summary>
            将原矩阵顺时针或者逆时针旋转90度
            </summary>
            <param name="x">输入矩阵</param>
            <param name="direction">旋转方向</param>
            <returns>旋转后的矩阵</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.FoldByDirection``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},SeeSharpTools.JY.DSP.Utility.FoldDirection)">
            <summary>
            将原矩阵进行水平或者垂直翻转
            </summary>
            <param name="x">输入矩阵</param>
            <param name="direction">翻转方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.FoldByDiagonal``1(MathNet.Numerics.LinearAlgebra.Matrix{``0},SeeSharpTools.JY.DSP.Utility.DialogalType)">
            <summary>
            将原矩阵进行对角线翻转，如果按照主对角线翻转等效于求矩阵转置
            </summary>
            <param name="x">输入矩阵</param>
            <param name="type">对角线类型</param>
            <returns>翻转后的矩阵</returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Buffer``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            将信号向量缓存在数据帧矩阵中，过程为将向量按照指定帧长度进行分割，再按列缓存到矩阵中，长度不足的补零
            </summary>
            <param name="x">一维实数向量</param>
            <param name="n">每帧的长度</param>
            <param name="p">重叠点数，p为正数时表示overlap，在每一帧的开头会重复上一帧末尾的p个元素</param>
            <param name="nodelay">第一帧数据的初始填充条件，为true时立即用样本点填充缓冲区，否则用零填充</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.RepeatElement``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32)">
            <summary>
            重复向量元素副本
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="v">输入向量</param>
            <param name="n">每个元素的重复次数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Replicate``1(MathNet.Numerics.LinearAlgebra.Vector{``0},System.Int32,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将向量按行或者按列复制为指定长度的矩阵
            </summary>
            <param name="v">输入向量</param>
            <param name="count">复制的行数或者列数</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Diag``1(``0[],System.Int32)">
            <summary>
            创建对角矩阵，方阵阶数为v.Length + abs(diagNum)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="v">对角线元素</param>
            <param name="diagNum">对角线编号，负数位于主对角线下方，正数位于主对角线下方，0代表主对角线</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Toeplitz``1(``0[],``0[])">
            <summary>
            生成托普利兹矩阵，主对角线上的元素相同
            </summary>
            <param name="c">矩阵第一列</param>
            <param name="r">矩阵第一行，如果未给出则和c相同</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Hankle``1(``0[],``0[])">
            <summary>
            生成Hankle矩阵，反对角线上的元素相同
            </summary>
            <param name="c">矩阵第一列</param>
            <param name="r">矩阵第一行，如果未给出则为全零，生成的矩阵为方阵</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Spdiags``1(``0[0:,0:],System.Int32[],System.Int32,System.Int32)">
            <summary>
            提取非零对角线并创建稀疏带状对角矩阵
            </summary>
            <param name="x">对角线元素数组</param>
            <param name="diagNumber">对角线编号数组，负数位于主对角线下方，正数位于主对角线下方，0代表主对角线</param>
            <param name="m">输出矩阵行数</param>
            <param name="n">输出矩阵列数</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Spdiags``1(``0[],System.Int32,System.Int32)">
            <summary>
            提取非零对角线并创建稀疏带状对角方阵
            </summary>
            <param name="src">对角线元素数组</param>
            <param name="diagNumber">对角线编号，负数位于主对角线下方，正数位于主对角线下方，0代表主对角线</param>
            <param name="n">输出矩阵列数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Sparse``1(System.Int32[],System.Int32[],``0[],System.Int32,System.Int32)">
            <summary>
            根据 i、col 和 v 三元组生成稀疏矩阵，矩阵大小为(max(i)+1)×(max(col)+1)，如果 i 和 col 对 v 中的几个元素具有相同的值，则会对 v 中具有重复索引的值进行累加
            </summary>
            <param name="i">行索引集合</param>
            <param name="j">列索引集合</param>
            <param name="v">值集合</param>
            <param name="m">输出矩阵行数</param>
            <param name="n">输出矩阵列数</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Companion(System.Double[])">
            <summary>
            根据给定的多项式系数创建伴随矩阵
            </summary>
            <param name="a">输入多项式系数数组</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.Magic(System.Int32)">
            <summary>
            生成指定阶数的幻方矩阵，每行每列和对角线上的和都相等，矩阵中的每个元素不能相同
            </summary>
            <param name="n">矩阵的阶数，不能小于3</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.MakeSparseGeneral``1(``0[0:,0:],System.Int32[],System.Int32[0:,0:])">
            <summary>
            Construct sparse matrix by inserting diagonals into existing matrix A
            </summary>
            <param name="B"></param>
            <param name="d"></param>
            <param name="A"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.MakeSparsePresorted``1(``0[0:,0:],System.Int32[],System.Int32,System.Int32)">
            <summary>
            Compute inputs to the sparse function in such a way that they will all be sorted, for performance
            </summary>
            <param name="B"></param>
            <param name="d"></param>
            <param name="m"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.MatrixUtility.OddOrderMagicSquare(System.Int32)">
            <summary>
            偶数阶幻方矩阵
            </summary>
            <param name="n"></param>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.RotateDirection">
            <summary>
            旋转方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.RotateDirection.Clockwise">
            <summary>
            顺时针
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.RotateDirection.Counterclockwise">
            <summary>
            逆时针
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.FoldDirection">
            <summary>
            翻转方向
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.FoldDirection.Horizontal">
            <summary>
            水平翻转
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.FoldDirection.Vertical">
            <summary>
            垂直翻转
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.DialogalType">
            <summary>
            对角线类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.DialogalType.Primary">
            <summary>
            主对角线
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.DialogalType.Secondary">
            <summary>
            次对角线
            </summary>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Transform.Fourier">
            <summary>
            傅里叶变换
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Forward(System.Double[],System.Double)">
            <summary>
            使用快速傅里叶变换算法计算实数信号的离散傅里叶变换 (DFT)
            </summary>
            <param name="x">输入实数信号</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Forward(System.Double[0:,0:],System.Double,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            使用快速傅里叶变换算法计算实数信号的离散傅里叶变换 (DFT)
            </summary>
            <param name="x">二维输入序列，按照列进行DFT</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Forward(System.Numerics.Complex[],System.Double)">
            <summary>
            使用快速傅里叶变换算法计算复数信号的离散傅里叶变换 (DFT)
            </summary>
            <param name="x">输入复信号</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Forward(System.Numerics.Complex[0:,0:],System.Double,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            使用快速傅里叶变换算法计算复数信号的离散傅里叶变换 (DFT)
            </summary>
            <param name="x">二维输入序列，按照列进行DFT</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Inverse(System.Double[],System.Double)">
            <summary>
            使用快速傅里叶变换算法计算实数信号的离散傅里叶逆变换 (IDFT)
            </summary>
            <param name="x">输入实数信号</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Inverse(System.Numerics.Complex[],System.Double)">
            <summary>
            使用快速傅里叶变换算法计算复数信号的离散傅里叶逆变换 (IDFT)
            </summary>
            <param name="x">输入复信号</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Inverse(System.Double[0:,0:],System.Double,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
             使用快速傅里叶变换算法计算二维实信号的离散傅里叶逆变换 (IDFT)
            </summary>
            <param name="x">二维输入序列，按照列进行IDFT</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.Inverse(System.Numerics.Complex[0:,0:],System.Double,SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
             使用快速傅里叶变换算法计算二维复信号的离散傅里叶逆变换 (IDFT)
            </summary>
            <param name="x">二维输入序列，按照列进行IDFT</param>
            <param name="size">变换长度，若信号小于变换长度，则对信号进行补零，
            若信号长度大于变换长度，则对信号进行截断。默认值等于输入信号长度</param>
            <param name="direction">行列方向</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.FFTShift``1(``0[])">
            <summary>
            将零频分量移到频谱中心
            </summary>
            <param name="x">一维输入序列</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.FFTShift``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            将零频分量移到频谱中心
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">二维输入序列</param>
            <param name="direction">行列方向，为Row时将每行的左右两半部分进行交换</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.InverseFFTShift``1(``0[])">
            <summary>
            逆零频平移，将进行过零频平移的傅里叶变换重新排列回原始变换输出
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">一维输入序列</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Transform.Fourier.InverseFFTShift``1(``0[0:,0:],SeeSharpTools.JY.DSP.Utility.Direction)">
            <summary>
            逆零频平移，将进行过零频平移的傅里叶变换重新排列回原始变换输出
            </summary>
            <typeparam name="T">泛型</typeparam>
            <param name="x">二维输入序列</param>
            <param name="direction">行列方向，为Row时将每行的左右两半部分进行交换</param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.Windows">
            <summary>
            用于滤波器和频谱分析的窗函数，其中对称系数用于滤波器设计，非对称系数用于频谱分析
            </summary>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.GetWindow(SeeSharpTools.JY.DSP.Utility.WindowType,System.Int32,System.Double,System.Boolean)">
            <summary>
            获取指定长度和类型的窗函数系数
            </summary>
            <param name="type">窗函数类型</param>
            <param name="width">窗函数系数长度</param>
            <param name="windowParam">窗参数，适用于Kasier窗、高斯窗和切比雪夫窗</param>
            <param name="symmetric">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.BartlettHann(System.Int32,System.Boolean)">
            <summary>
            BartlettHann窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Blackman(System.Int32,System.Boolean)">
            <summary>
            Blackman窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Hamming(System.Int32,System.Boolean)">
            <summary>
            汉明窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Hann(System.Int32,System.Boolean)">
            <summary>
            汉宁窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.FlatTop(System.Int32,System.Boolean)">
            <summary>
            平顶窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Kaiser(System.Int32,System.Double,System.Boolean)">
            <summary>
            KaiserBessel窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="beta">形状系数</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Chebyshev(System.Int32,System.Double,System.Boolean)">
            <summary>
            切比雪夫窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="atten">衰减系数，单位dB</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.GenCosWin(System.String,System.Int32,System.Boolean)">
            <summary>
            returns the generalized cosine window
            </summary>
            <param name="window">any of 'hamming', 'hann', 'blackman'</param>
            <param name="n">length of the window desired</param>
            <param name="symmetric">Sampling flag</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.SymWindow(System.String,System.Int32,System.Int32)">
            <summary>
            symmetric generalized cosine window, Returns an exactly symmetric N point generalized cosine window
            by evaluating the first half and then flipping the same samples over the other half
            </summary>
            <param name="window">any of 'hamming', 'hann', 'blackman'</param>
            <param name="n">length of the window desired</param>
            <param name="startIdx"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.CalWindow(System.Int32,System.Int32,System.String)">
            <summary>
            Calculate the generalized cosine window samples
            </summary>
            <param name="m">first M points of window</param>
            <param name="n">length of the window desired</param>
            <param name="window">any of 'hamming', 'hann', 'blackman'</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.GetKaiserWindowLength(System.Int32)">
            <summary>
            根据信号长度选择默认的窗长
            </summary>
            <param name="dataLen">输入信号长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Kaiser_beta(System.Double)">
            <summary>
            根据指定的衰减计算Kasier窗的beta参数
            </summary>
            <param name="atten"></param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.BetaByLength(System.Int32)">
            <summary>
            根据滤波器系数长度选择最优的Kaiser窗beta参数
            </summary>
            <param name="length">滤波器长度</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.Hanning(System.Int32,System.Boolean)">
            <summary>
            Hanning窗函数设计
            </summary>
            <param name="width">窗函数系数长度</param>
            <param name="sym">窗系数是否对称，对称系数用于滤波器设计，非对称系数用于频谱分析</param>
            <returns></returns>
        </member>
        <member name="M:SeeSharpTools.JY.DSP.Utility.Windows.SymHanning(System.Int32)">
            <summary>
            对称汉宁窗
            </summary>
            <param name="width">窗长</param>
            <returns></returns>
        </member>
        <member name="T:SeeSharpTools.JY.DSP.Utility.WindowType">
            <summary>
            窗函数类型
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.None">
            <summary>
            不加窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.BartlettHann">
            <summary>
            Bartlett-Hann 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Bartlett">
            <summary>
            Bartlett 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Blackman">
            <summary>
            Blackman 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.BlackmanHarris">
            <summary>
            Blackman-Harris 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Chebwin">
            <summary>
            Chebyshev 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Cosine">
            <summary>
            余弦窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.FlatTopWin">
            <summary>
            平顶窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Gausswin">
            <summary>
            高斯窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Hamming">
            <summary>
            Hamming 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Hann">
            <summary>
            Hann 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Kaiser">
            <summary>
            Kaiser 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Nuttall">
            <summary>
            Nuttall's Blackman-Harris 窗
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Rectwin">
            <summary>
            矩形窗，等效于Kaiser窗的beta参数为0
            </summary>
        </member>
        <member name="F:SeeSharpTools.JY.DSP.Utility.WindowType.Triang">
            <summary>
            三角形窗
            </summary>
        </member>
    </members>
</doc>
